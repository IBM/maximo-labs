{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to the IBM Maximo Monitor Modbus Simulator Lab This Maximo Hands-on Lab will describe how to install and setup a Modbus Simulator, that will simulate two Lenze i550 variable frequency drives (VFDs). It can be used in many different custom demonstrations, hence why it is a separate lab. The rationale behind creating this lab is to: provide an easy to use modbus simulator which can be used in other labs or other custom demonstrations. provide some OT data points from an industrial device (a Variable Frequency Drive) - without actually having one available. provide a multi-platform simulator, that can be used on Windows, MacOS and Linux. provide a simulator with dynamic OT data points instead of a Windows based simulator that only deliver fixed values (e.g. Unslave) Objectives After completing this lab, you will be able to either: \u25ba Use a docker container. \u2003\u2003A black box solution with all defined: \u2003\u2003- easy to start and use \u2003\u2003- no need to install Node-RED \u2003\u2003- no possibility to change anything \u25ba Use a Node-RED installation with a provided script: \u2003\u2003A white box solution: \u2003\u2003- takes a little longer to setup \u2003\u2003- is fully customisable The Simulator The modbus simulator is simulating 2 independant Lenze i550 Variable Frequency Drives delivering the following data points: Holding Register Data point Type 2000 AC Drive Status Word Static 2001 Frequency Dynamic 2002 Error Code Static 2003 Drive Status Static 2004 Motor Voltage Dynamic 2005 Motor Current Dynamic 2006 Not Used Static 2007 Not Used Static 2008 Not Used Static 2009 Control Card Temperature C Dynamic 2010 DC Bus Voltage Dynamic 2011 Digital Input Status Static 2012 Motor Torque Random 2101 Frequency Command Static The two devices are using the Modbus TCP protocol using port 10502 and 20502. So you need to use the IP Address of the machine where the simulator is running combined with the port numbers, e.g. - 192.168.1.42:10502 - 192.168.1.42:20502 Tip The dynamic and random values will change every 30 second. The dynamic values are created using Perlin Noise The standard port number for Modbus devices is 502, but I decided to use port 10502 and 20502 providing two independant devices that would work on multiple platforms. Note Expected time needed to run the complete lab: less than 30 minutes Updated: 2025-06-05","title":"Welcome to this lab"},{"location":"#welcome-to-the-ibm-maximo-monitor-modbus-simulator-lab","text":"This Maximo Hands-on Lab will describe how to install and setup a Modbus Simulator, that will simulate two Lenze i550 variable frequency drives (VFDs). It can be used in many different custom demonstrations, hence why it is a separate lab. The rationale behind creating this lab is to: provide an easy to use modbus simulator which can be used in other labs or other custom demonstrations. provide some OT data points from an industrial device (a Variable Frequency Drive) - without actually having one available. provide a multi-platform simulator, that can be used on Windows, MacOS and Linux. provide a simulator with dynamic OT data points instead of a Windows based simulator that only deliver fixed values (e.g. Unslave)","title":"Welcome to the IBM Maximo Monitor Modbus Simulator Lab"},{"location":"#objectives","text":"After completing this lab, you will be able to either: \u25ba Use a docker container. \u2003\u2003A black box solution with all defined: \u2003\u2003- easy to start and use \u2003\u2003- no need to install Node-RED \u2003\u2003- no possibility to change anything \u25ba Use a Node-RED installation with a provided script: \u2003\u2003A white box solution: \u2003\u2003- takes a little longer to setup \u2003\u2003- is fully customisable","title":"Objectives"},{"location":"#the-simulator","text":"The modbus simulator is simulating 2 independant Lenze i550 Variable Frequency Drives delivering the following data points: Holding Register Data point Type 2000 AC Drive Status Word Static 2001 Frequency Dynamic 2002 Error Code Static 2003 Drive Status Static 2004 Motor Voltage Dynamic 2005 Motor Current Dynamic 2006 Not Used Static 2007 Not Used Static 2008 Not Used Static 2009 Control Card Temperature C Dynamic 2010 DC Bus Voltage Dynamic 2011 Digital Input Status Static 2012 Motor Torque Random 2101 Frequency Command Static The two devices are using the Modbus TCP protocol using port 10502 and 20502. So you need to use the IP Address of the machine where the simulator is running combined with the port numbers, e.g. - 192.168.1.42:10502 - 192.168.1.42:20502 Tip The dynamic and random values will change every 30 second. The dynamic values are created using Perlin Noise The standard port number for Modbus devices is 502, but I decided to use port 10502 and 20502 providing two independant devices that would work on multiple platforms. Note Expected time needed to run the complete lab: less than 30 minutes Updated: 2025-06-05","title":"The Simulator"},{"location":"docker/","text":"Objectives In this Exercise you will learn how to use Docker to run a fixed and ready docker container with the modbus simulator. Note The created docker container should work on the following architectures: - x86 (Windows/Linux/macOS) - ARM (Linux/macOS). 1. Install Docker There are different ways to install the Docker engine depending of the package and the OS. One multi platform option is Rancher Desktop. It is fairly easy to install Rancher Desktop, as you just have to follow this guide: Running Docker locally Tip Podman and Docker Desktop should also work, but I have not tested it. 2. Create the Docker container Open a terminal or command window and run the following command: docker create -p 10502:10502 -p 20502:20502 -v node_red_data_vol:/data --name i550simulator ekstrom/modbus_simulator Please be patient even though you'll see the following message: Unable to find image 'ekstrom/modbus_simulator:latest' locally It needs to pull the docker image. It has been given the name: i550simulator 3. Start the Docker container Run the follwing command to start the container: docker start i550simulator The simulator is now active and the random and dynamic values will change every 30 second. It will run in the background and not produce any output in the terminal/command window. 4. Stop and remove the Docker container Once you are done using the docker based simulator you can stop it with the following command: docker stop i550simulator and remove the container with the following command: docker rm i550simulator All Docker commands in one window Congratulations you have successfully setup a modbus simulator environment using a preconfigured docker container.","title":"1. Use the Docker image"},{"location":"docker/#objectives","text":"In this Exercise you will learn how to use Docker to run a fixed and ready docker container with the modbus simulator. Note The created docker container should work on the following architectures: - x86 (Windows/Linux/macOS) - ARM (Linux/macOS).","title":"Objectives"},{"location":"docker/#1-install-docker","text":"There are different ways to install the Docker engine depending of the package and the OS. One multi platform option is Rancher Desktop. It is fairly easy to install Rancher Desktop, as you just have to follow this guide: Running Docker locally Tip Podman and Docker Desktop should also work, but I have not tested it.","title":"1. Install Docker"},{"location":"docker/#2-create-the-docker-container","text":"Open a terminal or command window and run the following command: docker create -p 10502:10502 -p 20502:20502 -v node_red_data_vol:/data --name i550simulator ekstrom/modbus_simulator Please be patient even though you'll see the following message: Unable to find image 'ekstrom/modbus_simulator:latest' locally It needs to pull the docker image. It has been given the name: i550simulator","title":"2. Create the Docker container"},{"location":"docker/#3-start-the-docker-container","text":"Run the follwing command to start the container: docker start i550simulator The simulator is now active and the random and dynamic values will change every 30 second. It will run in the background and not produce any output in the terminal/command window.","title":"3. Start the Docker container"},{"location":"docker/#4-stop-and-remove-the-docker-container","text":"Once you are done using the docker based simulator you can stop it with the following command: docker stop i550simulator and remove the container with the following command: docker rm i550simulator","title":"4. Stop and remove the Docker container"},{"location":"docker/#all-docker-commands-in-one-window","text":"Congratulations you have successfully setup a modbus simulator environment using a preconfigured docker container.","title":"All Docker commands in one window"},{"location":"node-red/","text":"Objectives In this Exercise you will learn how to: Install Node-RED locally Add required additional nodes Install the modbus simulator script Install Node-RED locally This is a fairly easy step, as you just have to follow this guide: Running Node-RED locally Once installed and started open the browser and start the Node-RED editor. Attention Make sure you are running Node-RED v3+, i.e. if you already have an existing older Node-RED instance installed locally then make sure to upgrade it before proceeding. Add required additional nodes Before loading the Node-RED script you need to add the required additional node library. Node-RED library dependency: - node-red-contrib-modbus Click on the burger menu in upper right hand corner and select Manage palette . Click on Install and write node-red-contrib-modbus in the Search field - then click on Install . Click on Install again. Wait until you see the new nodes have been installed. Install the modbus simulator script Download the flow Launch Node-RED Click on the burger menu and choose Import Click on select a file to import Choose the file downloaded in step 1. Click Import Delete Flow 1 Click on Deploy Your local Modbus Simulator is now active and the random and dynamic values will change every 30 second. Customisation tips and tricks Changing port number If you need to change the port number, this is done in the Modbus Flex Server node: Changing dynamic range The function nodes provide the content of the holding registers (defined in msg.topic). You can change the upper limit, the lower limit, and the default value if needed. Adding another device You can add another device by duplicating one of the tabs. Just remember to change the port number in the Modbus Flex Server node in the new tab. Congratulations you have successfully installed and prepared a local instance of Node-RED running as a modbus simulator.","title":"2. Use the Node-RED script"},{"location":"node-red/#objectives","text":"In this Exercise you will learn how to: Install Node-RED locally Add required additional nodes Install the modbus simulator script","title":"Objectives"},{"location":"node-red/#install-node-red-locally","text":"This is a fairly easy step, as you just have to follow this guide: Running Node-RED locally Once installed and started open the browser and start the Node-RED editor. Attention Make sure you are running Node-RED v3+, i.e. if you already have an existing older Node-RED instance installed locally then make sure to upgrade it before proceeding.","title":"Install Node-RED locally"},{"location":"node-red/#add-required-additional-nodes","text":"Before loading the Node-RED script you need to add the required additional node library. Node-RED library dependency: - node-red-contrib-modbus Click on the burger menu in upper right hand corner and select Manage palette . Click on Install and write node-red-contrib-modbus in the Search field - then click on Install . Click on Install again. Wait until you see the new nodes have been installed.","title":"Add required additional nodes"},{"location":"node-red/#install-the-modbus-simulator-script","text":"Download the flow Launch Node-RED Click on the burger menu and choose Import Click on select a file to import Choose the file downloaded in step 1. Click Import Delete Flow 1 Click on Deploy Your local Modbus Simulator is now active and the random and dynamic values will change every 30 second.","title":"Install the modbus simulator script"},{"location":"node-red/#customisation-tips-and-tricks","text":"","title":"Customisation tips and tricks"},{"location":"node-red/#changing-port-number","text":"If you need to change the port number, this is done in the Modbus Flex Server node:","title":"Changing port number"},{"location":"node-red/#changing-dynamic-range","text":"The function nodes provide the content of the holding registers (defined in msg.topic). You can change the upper limit, the lower limit, and the default value if needed.","title":"Changing dynamic range"},{"location":"node-red/#adding-another-device","text":"You can add another device by duplicating one of the tabs. Just remember to change the port number in the Modbus Flex Server node in the new tab. Congratulations you have successfully installed and prepared a local instance of Node-RED running as a modbus simulator.","title":"Adding another device"},{"location":"prereqs/","text":"Pre-Requisite Instructions Here are the required pre-requisites for the Maximo Monitor Modbus Simulator lab. Attention This lab can be used with any version of Maximo Application Suite as it runs independently. All Exercises All Exercises require that you have: A computer with a Chrome or Firefox browser and internet connectivity. User access to a Maximo Application Suite environment. Your Exercise facilitator should have provided you with the information on your access. An IBM ID. If you don't have an IBM ID you can get one here : o Click Login to MY IBM button o Click Create an IBM ID link Test your access to the Maximo Application Suite environment.","title":"Pre-Requisites"},{"location":"prereqs/#pre-requisite-instructions","text":"Here are the required pre-requisites for the Maximo Monitor Modbus Simulator lab. Attention This lab can be used with any version of Maximo Application Suite as it runs independently.","title":"Pre-Requisite Instructions"},{"location":"prereqs/#all-exercises","text":"All Exercises require that you have: A computer with a Chrome or Firefox browser and internet connectivity. User access to a Maximo Application Suite environment. Your Exercise facilitator should have provided you with the information on your access. An IBM ID. If you don't have an IBM ID you can get one here : o Click Login to MY IBM button o Click Create an IBM ID link Test your access to the Maximo Application Suite environment.","title":"All Exercises"},{"location":"release_notes/","text":"Contributors to IBM Maximo Monitor Modbus Simulator Lab Author & Developer: Jan Ekstr\u00f8m - jan.ekstrom@dk.ibm.com Dockerization Assistance: Celso Hernando Felipe (Building a docker image with Node-RED) - celso.hernando@es.ibm.com Gregorio Guerretta (Adding support for Apple ARM processor) - gregorio.guerretta@ibm.com Change Information Date By Description 2025-06-05 Jan Ekstr\u00f8m Moved to the MAS 9.1 Section. 2025-04-02 Jan Ekstr\u00f8m Added 'Copy to clipboard' for commands. 2024-06-06 Jan Ekstr\u00f8m Updated the Docker image to support Apple Silicon (ARM) as well as x86 chip architecture. 2024-04-20 Jan Ekstr\u00f8m First version of this lab - after review.","title":"Release Notes"},{"location":"release_notes/#contributors-to-ibm-maximo-monitor-modbus-simulator-lab","text":"","title":"Contributors to IBM Maximo Monitor Modbus Simulator Lab"},{"location":"release_notes/#author-developer","text":"Jan Ekstr\u00f8m - jan.ekstrom@dk.ibm.com","title":"Author &amp; Developer:"},{"location":"release_notes/#dockerization-assistance","text":"Celso Hernando Felipe (Building a docker image with Node-RED) - celso.hernando@es.ibm.com Gregorio Guerretta (Adding support for Apple ARM processor) - gregorio.guerretta@ibm.com","title":"Dockerization Assistance:"},{"location":"release_notes/#change-information","text":"Date By Description 2025-06-05 Jan Ekstr\u00f8m Moved to the MAS 9.1 Section. 2025-04-02 Jan Ekstr\u00f8m Added 'Copy to clipboard' for commands. 2024-06-06 Jan Ekstr\u00f8m Updated the Docker image to support Apple Silicon (ARM) as well as x86 chip architecture. 2024-04-20 Jan Ekstr\u00f8m First version of this lab - after review.","title":"Change Information"}]}