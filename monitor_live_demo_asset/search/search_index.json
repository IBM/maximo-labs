{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to the IBM Maximo Monitor Live Demo Asset Lab This lab will describe how to install and setup a Raspberry Pi Engine controller (RPE) asset with its corresponding three devices delivering data asynchronously. The rationale behind creating \u201cyet another\u201d demo asset is to differ on a couple of areas by using an asset that: is accessible for most people, hence why a Raspberry Pi was chosen. delivers real measurements instead of simulated data, which can be accomplished by using the real sensors on the Raspberry Pi as well as on an attached SenseHat. It has been tested on up to 8 RPE's running in three different countries. They actually behaved differently even though the same hardware and software was used - which is closer to the real world. is easy to install, so a standard Pi installation using standard Node-RED was selected. can act as a \u201cmachine\u201d or \u201can embedded circuit in an industrial device\u201d. can be used in many different custom demonstrations, hence why it is a separate lab. Objectives After completing this lab, you will be able to: \u25ba Create RPE device credentials in Maximo Application Suite (MAS) Monitor \u25ba Prepare a Raspberry Pi with a SenseHat \u25ba Convert the Raspberry Pi into an RPE asset \u25ba Verify that data is delivered from the RPE devices to MAS Monitor Hardware requirements are located here: Hardware pre-requisites Once the lab is completed, the RPE User Guide describes how to operate the RPE using the SenseHAT LED's and Joystick, which is helpful during custom demonstrations. Note Expected time needed to run the complete lab: 2 hour Updated: 2025-04-02","title":"Welcome to this lab"},{"location":"#welcome-to-the-ibm-maximo-monitor-live-demo-asset-lab","text":"This lab will describe how to install and setup a Raspberry Pi Engine controller (RPE) asset with its corresponding three devices delivering data asynchronously. The rationale behind creating \u201cyet another\u201d demo asset is to differ on a couple of areas by using an asset that: is accessible for most people, hence why a Raspberry Pi was chosen. delivers real measurements instead of simulated data, which can be accomplished by using the real sensors on the Raspberry Pi as well as on an attached SenseHat. It has been tested on up to 8 RPE's running in three different countries. They actually behaved differently even though the same hardware and software was used - which is closer to the real world. is easy to install, so a standard Pi installation using standard Node-RED was selected. can act as a \u201cmachine\u201d or \u201can embedded circuit in an industrial device\u201d. can be used in many different custom demonstrations, hence why it is a separate lab.","title":"Welcome to the IBM Maximo Monitor Live Demo Asset Lab"},{"location":"#objectives","text":"After completing this lab, you will be able to: \u25ba Create RPE device credentials in Maximo Application Suite (MAS) Monitor \u25ba Prepare a Raspberry Pi with a SenseHat \u25ba Convert the Raspberry Pi into an RPE asset \u25ba Verify that data is delivered from the RPE devices to MAS Monitor Hardware requirements are located here: Hardware pre-requisites Once the lab is completed, the RPE User Guide describes how to operate the RPE using the SenseHAT LED's and Joystick, which is helpful during custom demonstrations. Note Expected time needed to run the complete lab: 2 hour Updated: 2025-04-02","title":"Objectives"},{"location":"convert_pi/","text":"Objectives In this Exercise you will learn how to convert the Raspbery Pi to an instance of the asset called Raspberry Pi Engine controller (RPE). In this task, you will import and modify the Node-RED flows that makes out the RPE. 1. Install the needed Node-RED libraries (nodes). a. Power on the Pi and wait for the green LED to calm down. b. Open your browser and enter the IP address or hostname from before using port 1880, e.g. 192.168.1.59:1880 OR rpe042.local:1880 c. Select the Manage palette from the burger menu: d. Find the node-red-dashboard under the Install tab: e. Install it: wait until you get a message about the nodes been installed. f. Install these two additional libraries: 2. Import the RPE Node-RED flows. a. Download the Node-RED RPE Flows.json . b. Select Import from the burger menu: c. Click on select a file to import and select the file you just downloaded. Click Import and it will create some new flows in Node-RED. d. Wait for something like this: e. Delete Flow 1 and click on Deploy 3. Modify the MQTT connections to your need. a. Go to the Collect And Send Data tab. b. Locate the MQTT nodes, which are trying to connect: c. In the Debug sidebar pane a couple of warnings tells you that the mqtt nodes failed to connect, which is only natural since the credentials are not transferred when the script was exported. Further you need to add your own credentials after the import: d. Follow the comment nodes if you want to change the number of mqtt connections. [Not Default] e. Modify the mqtt nodes with your credentials. Open the mqtt node for the CPU device: f. Optionally change the name to your RPE CPU Device Id. Click on the pencil to modify the Server: g. Change the messaging server of the connection and the port number to 443 (red boxes): The Client ID (purple box) is defined as d:<org>:<device type>:<device id> \u2013 e.g. d:wwgeo:CPU:RPE042-CPU-01 The corresponding Server could be: wwgeo.messaging.iot.wwgeomas.gtm-pat.com for the WW MAS Geo cluster. Use the one from your environment. The TLS configuration must be the same messaging server and the Verify server certificate must be un-checked: h. Select the Security tab The Username is use-token-auth The Password is the Authentication Token from when you created the device in Exercise 1. i. Press Update and Done j. Clear the debug sidebar pane and click Deploy. k. You\u2019ll see the mqtt out node reporting to be connected if the credentials are correct: l. After a short while the disconnected state changes to connecting and the following appears in the debug sidebar pane: m. Do the same with the other mqtt out nodes. n. You should now see the following if all credentials are correct: o. You can add additional mqtt nodes by following the instructions in the comments notes below. p. This concludes this exercise. Tip The interpretation of the SenseHAT LED\u2019s and the usage of the joystick is explained in the RPE User Guide . Tip The flows work in two different time intervals with different behavior: 1) Monday \u2013 Friday 8am-6pm CET: In this mode, a 5 minutes load is put on the RPE every 15 minutes (00, 15, 30, 45) after which a 10 minutes idle and cooling down period is allocated. The RPE gathers and submit data to Maximo Monitor every 10 second. 2) All other times no load is being is being performed. The RPE gathers and submit data to Maximo Monitor every 20 minutes.","title":"3. Convert Pi to RPE"},{"location":"convert_pi/#objectives","text":"In this Exercise you will learn how to convert the Raspbery Pi to an instance of the asset called Raspberry Pi Engine controller (RPE). In this task, you will import and modify the Node-RED flows that makes out the RPE.","title":"Objectives"},{"location":"convert_pi/#1-install-the-needed-node-red-libraries-nodes","text":"a. Power on the Pi and wait for the green LED to calm down. b. Open your browser and enter the IP address or hostname from before using port 1880, e.g. 192.168.1.59:1880 OR rpe042.local:1880 c. Select the Manage palette from the burger menu: d. Find the node-red-dashboard under the Install tab: e. Install it: wait until you get a message about the nodes been installed. f. Install these two additional libraries:","title":"1. Install the needed Node-RED libraries (nodes)."},{"location":"convert_pi/#2-import-the-rpe-node-red-flows","text":"a. Download the Node-RED RPE Flows.json . b. Select Import from the burger menu: c. Click on select a file to import and select the file you just downloaded. Click Import and it will create some new flows in Node-RED. d. Wait for something like this: e. Delete Flow 1 and click on Deploy","title":"2. Import the RPE Node-RED flows."},{"location":"convert_pi/#3-modify-the-mqtt-connections-to-your-need","text":"a. Go to the Collect And Send Data tab. b. Locate the MQTT nodes, which are trying to connect: c. In the Debug sidebar pane a couple of warnings tells you that the mqtt nodes failed to connect, which is only natural since the credentials are not transferred when the script was exported. Further you need to add your own credentials after the import: d. Follow the comment nodes if you want to change the number of mqtt connections. [Not Default] e. Modify the mqtt nodes with your credentials. Open the mqtt node for the CPU device: f. Optionally change the name to your RPE CPU Device Id. Click on the pencil to modify the Server: g. Change the messaging server of the connection and the port number to 443 (red boxes): The Client ID (purple box) is defined as d:<org>:<device type>:<device id> \u2013 e.g. d:wwgeo:CPU:RPE042-CPU-01 The corresponding Server could be: wwgeo.messaging.iot.wwgeomas.gtm-pat.com for the WW MAS Geo cluster. Use the one from your environment. The TLS configuration must be the same messaging server and the Verify server certificate must be un-checked: h. Select the Security tab The Username is use-token-auth The Password is the Authentication Token from when you created the device in Exercise 1. i. Press Update and Done j. Clear the debug sidebar pane and click Deploy. k. You\u2019ll see the mqtt out node reporting to be connected if the credentials are correct: l. After a short while the disconnected state changes to connecting and the following appears in the debug sidebar pane: m. Do the same with the other mqtt out nodes. n. You should now see the following if all credentials are correct: o. You can add additional mqtt nodes by following the instructions in the comments notes below. p. This concludes this exercise. Tip The interpretation of the SenseHAT LED\u2019s and the usage of the joystick is explained in the RPE User Guide . Tip The flows work in two different time intervals with different behavior: 1) Monday \u2013 Friday 8am-6pm CET: In this mode, a 5 minutes load is put on the RPE every 15 minutes (00, 15, 30, 45) after which a 10 minutes idle and cooling down period is allocated. The RPE gathers and submit data to Maximo Monitor every 10 second. 2) All other times no load is being is being performed. The RPE gathers and submit data to Maximo Monitor every 20 minutes.","title":"3. Modify the MQTT connections to your need."},{"location":"create_devices/","text":"Objectives In this Exercise you will learn how to create the RPE device credentials in MAS Monitor. Your RPE asset will have three devices that measures different things: Device Type Measurements CPU CPU related metrics from the Pi OSC Oscillator related metrics from the Pi ENV Environmental metrics from the SenseHAT You need to create three device types (CPU, OSC and ENV) with the related metrics (as we already know what they are) and then later a device of each device type. The credentials for the three devices will be used when configuring the RPE Node-RED script to work in your environment (in exercise 3. Convert Pi to RPE ). 1. Login a. Login to your instance of MAS and navigate to Monitor: 2. Create the device types Note Jump to Create the devices if the CPU, OSC and ENV device types have already been created. a. Go to the Setup tab: b. We will setup three device types: CPU, OSC and ENV. c. Select the Devices tab and press the blue + button to add a new device type: d. Select the Basic template and click Next: e. Define the Device type name as \u201cCPU\u201d and either clear or replace the Description f. Click Create and click on Add metric and Add metric g. Create the following metrics while pressing \u201cAdd metric +\u201d to add another metric row: Metric Display name Event Type Unit cl CPU_Load event NUMBER Percentage ct CPU_Temperature event NUMBER C du Disk_Usage event NUMBER Percentage mu Memory_Usage event NUMBER Percentage evt_timestamp event TIMESTAMP Tip All the values above are case sensitive. h. Click the Add button and then the Save button to save the metrics i. Expand the event and it should look somewhat like this (the order might be different): j. For the OSC Device type: repeat step 2c \u2013 2f and create the following metrics: Metric Display name Event Type Unit ov OSC_Voltage event NUMBER V ot OSC_Temperature event NUMBER C of OSC_Frequency event NUMBER Hz evt_timestamp event TIMESTAMP k. Click the Add button and then the Save button to save the metrics l. Expand the event and it should look somewhat like this (the order might change): m. For the ENV Device type: repeat step 2c \u2013 2f and create the following metrics: Metric Display name Event Type Unit eh ENV_Humidity event NUMBER Percentage ep ENV_Pressure event NUMBER millibar et ENV_Temperature event NUMBER C evt_timestamp event TIMESTAMP n. Click the Add button and then the Save button to save the metrics o. Expand the event and it should look somewhat like this (the order might change): 3. Create the devices a. It is now time to create the three devices for the first asset. The example shows how to do that for the asset called RPE042. b. Go to the Setup tab: c. Select the Devices tab. Select the CPU device type and click the blue \u201cAdd a device +\u201d link (There might already be existing devices in your environment, just make sure you create your own set): d. Define your own Device ID, leave the Token type to be Auto-generated, and click Add: Attention Make sure to write down the credentials \u2013 at least the Authentication Token as it is non-recoverable. e. Once you have saved the credentials a safe place, then press Close: f. For the ENV device repeat step 3c \u2013 3e, e.g. RPE042-ENV-17 g. For the OSC device repeat step 3c \u2013 3e, e.g. RPE042-OSC-03 h. Navigate to the IoT Tool. This can either be done from the Monitor Home page: or from the Application Switcher in the upper right corner: A new browser tab opens with the MAS Watson IoT Platform Service. i. Here is how it could look like in the IoT Tool, once you have created all three devices and have used the Search by Device ID : j. This concludes this exercise.","title":"1. Create Monitor devices"},{"location":"create_devices/#objectives","text":"In this Exercise you will learn how to create the RPE device credentials in MAS Monitor. Your RPE asset will have three devices that measures different things: Device Type Measurements CPU CPU related metrics from the Pi OSC Oscillator related metrics from the Pi ENV Environmental metrics from the SenseHAT You need to create three device types (CPU, OSC and ENV) with the related metrics (as we already know what they are) and then later a device of each device type. The credentials for the three devices will be used when configuring the RPE Node-RED script to work in your environment (in exercise 3. Convert Pi to RPE ).","title":"Objectives"},{"location":"create_devices/#1-login","text":"a. Login to your instance of MAS and navigate to Monitor:","title":"1. Login"},{"location":"create_devices/#2-create-the-device-types","text":"Note Jump to Create the devices if the CPU, OSC and ENV device types have already been created. a. Go to the Setup tab: b. We will setup three device types: CPU, OSC and ENV. c. Select the Devices tab and press the blue + button to add a new device type: d. Select the Basic template and click Next: e. Define the Device type name as \u201cCPU\u201d and either clear or replace the Description f. Click Create and click on Add metric and Add metric g. Create the following metrics while pressing \u201cAdd metric +\u201d to add another metric row: Metric Display name Event Type Unit cl CPU_Load event NUMBER Percentage ct CPU_Temperature event NUMBER C du Disk_Usage event NUMBER Percentage mu Memory_Usage event NUMBER Percentage evt_timestamp event TIMESTAMP Tip All the values above are case sensitive. h. Click the Add button and then the Save button to save the metrics i. Expand the event and it should look somewhat like this (the order might be different): j. For the OSC Device type: repeat step 2c \u2013 2f and create the following metrics: Metric Display name Event Type Unit ov OSC_Voltage event NUMBER V ot OSC_Temperature event NUMBER C of OSC_Frequency event NUMBER Hz evt_timestamp event TIMESTAMP k. Click the Add button and then the Save button to save the metrics l. Expand the event and it should look somewhat like this (the order might change): m. For the ENV Device type: repeat step 2c \u2013 2f and create the following metrics: Metric Display name Event Type Unit eh ENV_Humidity event NUMBER Percentage ep ENV_Pressure event NUMBER millibar et ENV_Temperature event NUMBER C evt_timestamp event TIMESTAMP n. Click the Add button and then the Save button to save the metrics o. Expand the event and it should look somewhat like this (the order might change):","title":"2. Create the device types"},{"location":"create_devices/#3-create-the-devices","text":"a. It is now time to create the three devices for the first asset. The example shows how to do that for the asset called RPE042. b. Go to the Setup tab: c. Select the Devices tab. Select the CPU device type and click the blue \u201cAdd a device +\u201d link (There might already be existing devices in your environment, just make sure you create your own set): d. Define your own Device ID, leave the Token type to be Auto-generated, and click Add: Attention Make sure to write down the credentials \u2013 at least the Authentication Token as it is non-recoverable. e. Once you have saved the credentials a safe place, then press Close: f. For the ENV device repeat step 3c \u2013 3e, e.g. RPE042-ENV-17 g. For the OSC device repeat step 3c \u2013 3e, e.g. RPE042-OSC-03 h. Navigate to the IoT Tool. This can either be done from the Monitor Home page: or from the Application Switcher in the upper right corner: A new browser tab opens with the MAS Watson IoT Platform Service. i. Here is how it could look like in the IoT Tool, once you have created all three devices and have used the Search by Device ID : j. This concludes this exercise.","title":"3. Create the devices"},{"location":"prepare_pi/","text":"Objectives In this Exercise you will learn how to prepare the Raspbery Pi with a SenseHAT. In this task, you will download Raspberry Pi OS from raspberry.org and install it on an SD Card. Further install a load test package and configure Node-RED to automatically start on boot. Note If you already have a Pi with a SenseHat running with the latest OS version then jump to step 4. 1. Download and install Raspberry Pi OS on an SD Card a. Go to https://www.raspberrypi.com/software/ and download the Raspberry Pi Imager: Tip For IBM\u2019ers: Either you need to follow the Portable Storage Approval Process to get an exception so you can write to your IBM machine USB port https://ciso-approvals.w3bmix.ibm.com/portable-storage-home.html or you\u2019ll need to find a non-IBM machine to perform this task. b. Install and start the Rapberry Pi Imager: c. Chose the Raspberry Pi Device type: d. Choose the Recommended OS: e. Choose Storage and select the SD Card in your laptop that you want to write to: f. Click Next: g. You might want to select Edit Settings, which will be easier and will skip step 2/3 later in this exercise \u2013 at least the username and password: h. Click on Save and Yes. Click on Yes to overwrite the SD card and wait until the verification has finished.: i. Once the SD card is ready you need to do some additional steps before inserting it into the Raspberry Pi. First copy over the following files to a local place on your laptop: an empty SSH file , wpa_supplicant.conf and the config.txt : Tip You can prepare the wpa_supplicant.conf file with your WiFi credentials, by following the instructions here: https://www.raspberrypi.org/documentation/configuration/wireless/headless.md The ssh file is empty. j. Add your WiFi credentials to the wpa_supplicant.conf file. You might also want to change the country code if you do not live in the US. k. Eject and re-insert the SD Card in the reader. l. Copy the 3 files to the bootfs location: m. Eject the SD card from the reader. 2. Get the Raspberry Pi up and running using the Raspberry Pi OS desktop a. Insert the micro SD card into the Raspberry Pi. b. Connect it to a monitor and keyboard/mouse. c. Power on the Pi and verify: - the WiFi is working - you have defined the right hostname (Terminal: hostname) - use Raspberry Pi Configuration tool to verify Interfaces are enabled (SSH and optionally VNC), Localisation and WLAN Country \u2013 OR - 3. Get the Raspberry Pi up and running headless using the terminal a. Insert the micro SD card into the Raspberry Pi and power it up. You know it is up and running when the SenseHat have turned off the LEDs and the Raspberry Pi green LED is blinking slowly. b. Open a terminal windows and ssh into the Pi: ssh pi@RPE042.local answer yes enter the default password: raspberry (or the password you changed in step 1g) c. [If not done already] The first thing you need to do is changing the default password using: passwd d. [If not done already] Then change the hostname (raspberry) to the instance of your RPE defined in task 1, e.g. RPE042. This needs to be changed in two files: sudo nano /etc/hostname sudo nano /etc/hosts Tip Control-o to save the file, followed by Control-x to exit from the nano editor. e. [If not done already] Change the localisation of your pi. sudo raspi-config select the following menu item: 5 Localisation Options and define your selections in all 4 submenus f. [Optional] You might want to enable VNC under 3 Interface Options g. Finish raspi-config h. Reboot the Pi: sudo reboot now wait a while until the Raspberry green LED have had some longer ON\u2019s and then revert back to a few blinks once in a while. i. SSH into the Pi again. Remember to use the new hostname and password: 4. Update and upgrade the Pi Update and upgrade the Pi by using the following commands: sudo apt update sudo apt full-upgrade get a cup of coffee or tea, as this might take a while. 5. A few additional steps When the Pi is up and running you only need a few additional steps that are a pre-req for the RPE Node-RED flows to work. a. SSH into the Pi if not already done so. b. Install Node-RED following the steps described here: https://nodered.org/docs/getting-started/raspberrypi However, it is advisable to add \u201c--node20\u201d to install Node-js V20 at the end of the install command: bash <(curl -sL https://raw.githubusercontent.com/node-red/linux-installers/master/deb/update-nodejs-and-nodered) --node20 Answer y to both questions and the installation will start. Press Enter to create the settings file. Enter your Username and Password . Press Enter to select default settings, until the settings file has been written. c. Set the Pi to autostart Node-RED at every boot: sudo systemctl enable nodered.service d. Install the sysbench package, which will be used to add load to the RPE at regular intervals: sudo apt install sysbench Tip Installing sysbench on the RPE is an IMPORTANT step to create load on the system regularly. e. Fetch the IP address of the RPE as you will use that later when using Node-RED: hostname -I (Showing both IP v4 and v6 addresses) f. Shutdown the RPE: sudo shutdown -h now Tip Power off once the green LED stopped blinking. NOW is a good time to backup you SD card to e.g. <date>-Fresh Image.img g. This concludes this exercise.","title":"2. Prepare Rasperry Pi"},{"location":"prepare_pi/#objectives","text":"In this Exercise you will learn how to prepare the Raspbery Pi with a SenseHAT. In this task, you will download Raspberry Pi OS from raspberry.org and install it on an SD Card. Further install a load test package and configure Node-RED to automatically start on boot. Note If you already have a Pi with a SenseHat running with the latest OS version then jump to step 4.","title":"Objectives"},{"location":"prepare_pi/#1-download-and-install-raspberry-pi-os-on-an-sd-card","text":"a. Go to https://www.raspberrypi.com/software/ and download the Raspberry Pi Imager: Tip For IBM\u2019ers: Either you need to follow the Portable Storage Approval Process to get an exception so you can write to your IBM machine USB port https://ciso-approvals.w3bmix.ibm.com/portable-storage-home.html or you\u2019ll need to find a non-IBM machine to perform this task. b. Install and start the Rapberry Pi Imager: c. Chose the Raspberry Pi Device type: d. Choose the Recommended OS: e. Choose Storage and select the SD Card in your laptop that you want to write to: f. Click Next: g. You might want to select Edit Settings, which will be easier and will skip step 2/3 later in this exercise \u2013 at least the username and password: h. Click on Save and Yes. Click on Yes to overwrite the SD card and wait until the verification has finished.: i. Once the SD card is ready you need to do some additional steps before inserting it into the Raspberry Pi. First copy over the following files to a local place on your laptop: an empty SSH file , wpa_supplicant.conf and the config.txt : Tip You can prepare the wpa_supplicant.conf file with your WiFi credentials, by following the instructions here: https://www.raspberrypi.org/documentation/configuration/wireless/headless.md The ssh file is empty. j. Add your WiFi credentials to the wpa_supplicant.conf file. You might also want to change the country code if you do not live in the US. k. Eject and re-insert the SD Card in the reader. l. Copy the 3 files to the bootfs location: m. Eject the SD card from the reader.","title":"1. Download and install Raspberry Pi OS on an SD Card"},{"location":"prepare_pi/#2-get-the-raspberry-pi-up-and-running-using-the-raspberry-pi-os-desktop","text":"a. Insert the micro SD card into the Raspberry Pi. b. Connect it to a monitor and keyboard/mouse. c. Power on the Pi and verify: - the WiFi is working - you have defined the right hostname (Terminal: hostname) - use Raspberry Pi Configuration tool to verify Interfaces are enabled (SSH and optionally VNC), Localisation and WLAN Country","title":"2. Get the Raspberry Pi up and running using the Raspberry Pi OS desktop"},{"location":"prepare_pi/#or-","text":"","title":"\u2013 OR -"},{"location":"prepare_pi/#3-get-the-raspberry-pi-up-and-running-headless-using-the-terminal","text":"a. Insert the micro SD card into the Raspberry Pi and power it up. You know it is up and running when the SenseHat have turned off the LEDs and the Raspberry Pi green LED is blinking slowly. b. Open a terminal windows and ssh into the Pi: ssh pi@RPE042.local answer yes enter the default password: raspberry (or the password you changed in step 1g) c. [If not done already] The first thing you need to do is changing the default password using: passwd d. [If not done already] Then change the hostname (raspberry) to the instance of your RPE defined in task 1, e.g. RPE042. This needs to be changed in two files: sudo nano /etc/hostname sudo nano /etc/hosts Tip Control-o to save the file, followed by Control-x to exit from the nano editor. e. [If not done already] Change the localisation of your pi. sudo raspi-config select the following menu item: 5 Localisation Options and define your selections in all 4 submenus f. [Optional] You might want to enable VNC under 3 Interface Options g. Finish raspi-config h. Reboot the Pi: sudo reboot now wait a while until the Raspberry green LED have had some longer ON\u2019s and then revert back to a few blinks once in a while. i. SSH into the Pi again. Remember to use the new hostname and password:","title":"3. Get the Raspberry Pi up and running headless using the terminal"},{"location":"prepare_pi/#4-update-and-upgrade-the-pi","text":"Update and upgrade the Pi by using the following commands: sudo apt update sudo apt full-upgrade get a cup of coffee or tea, as this might take a while.","title":"4. Update and upgrade the Pi"},{"location":"prepare_pi/#5-a-few-additional-steps","text":"When the Pi is up and running you only need a few additional steps that are a pre-req for the RPE Node-RED flows to work. a. SSH into the Pi if not already done so. b. Install Node-RED following the steps described here: https://nodered.org/docs/getting-started/raspberrypi However, it is advisable to add \u201c--node20\u201d to install Node-js V20 at the end of the install command: bash <(curl -sL https://raw.githubusercontent.com/node-red/linux-installers/master/deb/update-nodejs-and-nodered) --node20 Answer y to both questions and the installation will start. Press Enter to create the settings file. Enter your Username and Password . Press Enter to select default settings, until the settings file has been written. c. Set the Pi to autostart Node-RED at every boot: sudo systemctl enable nodered.service d. Install the sysbench package, which will be used to add load to the RPE at regular intervals: sudo apt install sysbench Tip Installing sysbench on the RPE is an IMPORTANT step to create load on the system regularly. e. Fetch the IP address of the RPE as you will use that later when using Node-RED: hostname -I (Showing both IP v4 and v6 addresses) f. Shutdown the RPE: sudo shutdown -h now Tip Power off once the green LED stopped blinking. NOW is a good time to backup you SD card to e.g. <date>-Fresh Image.img g. This concludes this exercise.","title":"5. A few additional steps"},{"location":"prereqs/","text":"Pre-Requisite Instructions Here are the required pre-requisites for the Maximo Monitor Live Demo Asset lab. Attention This lab requires Maximo Application Suite 8.10 or later. MAS application entitlement must be Limited or higher. All Exercises Hardware All Exercises require that you have: A Raspberry Pi (Has been tested with: Pi 3 Model B, Pi 4 Model B) A Raspberry Pi SenseHAT A fast SD Card of at least 16GB A Raspberry Pi Power supply [Optional] A case where there is room to the Raspberry Pi with a mounted SenseHAT [Optional] A USB Keyboard and mouse, e.g. Logitech K400 Plus [Optional] An HDMI cabel The first 4 items can be acquired at approx. 80 $ / 75 \u20ac. Software All Exercises require that you have: A computer with a Chrome or Firefox browser and internet connectivity. User access to a Maximo Application Suite environment. Your Exercise facilitator should have provided you with the information on your access. An IBM ID. If you don't have an IBM ID you can get one here : o Click Login to MY IBM button o Click Create an IBM ID link Test your access to the Maximo Application Suite environment.","title":"Pre-Requisites"},{"location":"prereqs/#pre-requisite-instructions","text":"Here are the required pre-requisites for the Maximo Monitor Live Demo Asset lab. Attention This lab requires Maximo Application Suite 8.10 or later. MAS application entitlement must be Limited or higher.","title":"Pre-Requisite Instructions"},{"location":"prereqs/#all-exercises","text":"","title":"All Exercises"},{"location":"prereqs/#hardware","text":"All Exercises require that you have: A Raspberry Pi (Has been tested with: Pi 3 Model B, Pi 4 Model B) A Raspberry Pi SenseHAT A fast SD Card of at least 16GB A Raspberry Pi Power supply [Optional] A case where there is room to the Raspberry Pi with a mounted SenseHAT [Optional] A USB Keyboard and mouse, e.g. Logitech K400 Plus [Optional] An HDMI cabel The first 4 items can be acquired at approx. 80 $ / 75 \u20ac.","title":"Hardware"},{"location":"prereqs/#software","text":"All Exercises require that you have: A computer with a Chrome or Firefox browser and internet connectivity. User access to a Maximo Application Suite environment. Your Exercise facilitator should have provided you with the information on your access. An IBM ID. If you don't have an IBM ID you can get one here : o Click Login to MY IBM button o Click Create an IBM ID link Test your access to the Maximo Application Suite environment.","title":"Software"},{"location":"release_notes/","text":"Contributors to IBM Maximo Monitor Live Demo Asset Lab Jan Ekstr\u00f8m - jan.ekstrom@dk.ibm.com Change Information Date By Description 2025-04-02 Jan Ekstr\u00f8m Added 'Copy to clipboard' for commands. 2024-02-27 Jan Ekstr\u00f8m Updated after review and dry-run on a Pi 4 Model B. 2024-02-26 Jan Ekstr\u00f8m First version of this lab.","title":"Release Notes"},{"location":"release_notes/#contributors-to-ibm-maximo-monitor-live-demo-asset-lab","text":"Jan Ekstr\u00f8m - jan.ekstrom@dk.ibm.com","title":"Contributors to IBM Maximo Monitor Live Demo Asset Lab"},{"location":"release_notes/#change-information","text":"Date By Description 2025-04-02 Jan Ekstr\u00f8m Added 'Copy to clipboard' for commands. 2024-02-27 Jan Ekstr\u00f8m Updated after review and dry-run on a Pi 4 Model B. 2024-02-26 Jan Ekstr\u00f8m First version of this lab.","title":"Change Information"},{"location":"user_guide/","text":"RPE User Guide This user guide will describe how to use and operate the RP Engine controller (RPE) once an RPE have been created following the exercises of this lab. Hardware requirements are located here: Hardware pre-requisites You can use this user guide to: \u25ba Understand the RPE measurements \u25ba Understand the RPE SenseHAT LED output \u25ba Operate the RPE using the SenseHAT joystick \u25ba Use the RPE local dashboard 1. Understand the RPE measurements The three devices (CPU, OSC, and ENV) in your RPE asset will submit its measured data on a regular basis to Maximo Monitor. The last exercise in this lab ended with a screen shot of the data being delivered for the CPU device into the IoT Tool: The properties are abbreviations of different measurements. The Central Processing Unit (CPU) Device: Metric Unit Description cl Percentage CPU Load ct C CPU Temperature du Percentage Disk Usage of the SD card in the Pi mu Percentage Memory Usage of the Pi The Oscillator (OSC) device: Metric Unit Description ov Volt Oscillator Voltage ot Celcius Oscillator Temperature of MHz Oscillator Frequency The Environment (ENV) device: Metric Unit Description \u00e7 eh Percentage Environment relativ Humidity measured by the SenseHat ep millibar Environment atmospheric Pressure measured by the SenseHat et Celcius Environment Temperature measured by the SenseHat 2. Understand the RPE SenseHAT LED output Overview You should look at the RPE SenseHAT from this angle, which means the power chord and/or the HDMI cable is pointing away from you: The display consists of three areas: Connection status of the mqtt connections Day of week including operation status: Running / Idle Four bars representing selected measurements Connection Status This single LED at the left in the lower row is telling you the connection status to the Maximo Monitor instance. All mqtt connections are connected All devices are connected. It depends on knowing how many device connections it must look after as described in exercise 3.3 . All mqtt connections are trying to connect All connections are either disconnected or connecting trying to establish a connection for all devices. This might be caused by lack of internet connectivity for the RPE. At least one but not all connections are connected This can be caused by faulty credentials in one or more mqtt out nodes, but not in all of them. Waiting for connecting status This may be caused by a mismatch between the number of connections defined and the number of mqtt out nodes the status node are listening to - as described in exercise 3.3 . Day of week including operation status The seven LED's to the right in the lower row each represents a day in the week, starting with Monday. Green means the RPE is running. The RPE will initiate a 5 minutes run under load every 0, 15, 30, 45 minutes past the top of the hour in the period: 8 am to 6 pm CET Monday to Friday. It will measure and submit data every 10 seconds while being in the running mode. Red means the RPE is idle, meaning outside of working hours or in the weekend. It will not run any loads and will only measure and send every 20 minutes. RPE is in working hour on a Tuesday It is Tuesday between 8am and 6pm CET and all connections are up and running. RPE is in idle mode on a Saturday It is Saturday at any time as it is weekend ;-) The four bars The four bars represent the following four measurements: cl: CPU Load ct: CPU Temperature ot: Oscillator Temperature et: Environment Temperature (from the SenseHat) Color Meaning value in % or C is within RED X > 80 YELLOW 60 >= X <80 GREEN 40 >= X <60 GREEN 20 >= X <40 GREEN X <20 Example 1 It is Wednesday between 8am and 6pm CET and all connections are up and running. The CPU Load is low, hence the temperatures are also relatively low. Example 2 It is Wednesday between 8am and 6pm CET and all connections are up and running. The CPU Load is high between 60 and 80%. The CPU Temperature is between 60 and 80 C. The Oscillator Temperature is above 80 C. The Env, Temperature is between 20 and 40 C. 3. Operate the RPE using the SenseHAT joystick Overview This section will explain the options the SenseHAT joystick delivers to operate the RPE. You should look at it from this angle, which means the power chord and/or the HDMI cable is pointing away from you: The joystick currently has 4 actions available: Down click Up click Enter click Hold to the left Attention Please be patient when using the joystick \u2013 it might take up to 20 seconds before you see the response on the SenseHAT LED Matrix. Down Click The down click shows scrolling text about network information changing between: IP Address in blue WiFi SSID in yellow MAC Address in green Up Click The up click shows scrolling text about RPE information changing between: The RPE ID in blue Software version of the Node-Red script in yellow Hardware version of the Raspberry Pi in green Enter Click Clicking on the enter button toggles the LED display off and on. Hold Left Holding the joystick left during some seconds will initiate an immediate SHUTDOWN of the RPE. This is in fact the best way to close down a Raspberry Pi minimizing the risk of damaging the SD card. Handle with care!! 4. Use the RPE local dashboard Overview The RPE have a local dashboard where you can see the measurements and some additional information. They are accessible on http://<the RPE IP Address>:1880/ui . The following three dashboards are available: RP Engine \u2013 Shows some Rasperry Pi measurements (CPU and OSC values) RP Environment \u2013 Shows some SenseHAT measurements RPE Control \u2013 shows some RPE information RP Engine \u2013 Idle Example All measurements are within normal Idle mode. RP Engine \u2013 Load Example All measurements are either high or very high when running under Load mode. RP Environment These measurements are done in the SenseHat and covers: Temperature (et) Relative Humidity (eh) Atmospheric Pressure (ep) RPE Control Information about the RPE software version and the Raspberry Pi hardware is available. Two buttons are available to either Reboot or shutdown the RPE. Handle with care!!","title":"RPE User Guide"},{"location":"user_guide/#rpe-user-guide","text":"This user guide will describe how to use and operate the RP Engine controller (RPE) once an RPE have been created following the exercises of this lab. Hardware requirements are located here: Hardware pre-requisites You can use this user guide to: \u25ba Understand the RPE measurements \u25ba Understand the RPE SenseHAT LED output \u25ba Operate the RPE using the SenseHAT joystick \u25ba Use the RPE local dashboard","title":"RPE User Guide"},{"location":"user_guide/#1-understand-the-rpe-measurements","text":"The three devices (CPU, OSC, and ENV) in your RPE asset will submit its measured data on a regular basis to Maximo Monitor. The last exercise in this lab ended with a screen shot of the data being delivered for the CPU device into the IoT Tool: The properties are abbreviations of different measurements. The Central Processing Unit (CPU) Device: Metric Unit Description cl Percentage CPU Load ct C CPU Temperature du Percentage Disk Usage of the SD card in the Pi mu Percentage Memory Usage of the Pi The Oscillator (OSC) device: Metric Unit Description ov Volt Oscillator Voltage ot Celcius Oscillator Temperature of MHz Oscillator Frequency The Environment (ENV) device: Metric Unit Description \u00e7 eh Percentage Environment relativ Humidity measured by the SenseHat ep millibar Environment atmospheric Pressure measured by the SenseHat et Celcius Environment Temperature measured by the SenseHat","title":"1. Understand the RPE measurements"},{"location":"user_guide/#2-understand-the-rpe-sensehat-led-output","text":"","title":"2. Understand the RPE SenseHAT LED output"},{"location":"user_guide/#overview","text":"You should look at the RPE SenseHAT from this angle, which means the power chord and/or the HDMI cable is pointing away from you: The display consists of three areas: Connection status of the mqtt connections Day of week including operation status: Running / Idle Four bars representing selected measurements","title":"Overview"},{"location":"user_guide/#connection-status","text":"This single LED at the left in the lower row is telling you the connection status to the Maximo Monitor instance.","title":"Connection Status"},{"location":"user_guide/#all-mqtt-connections-are-connected","text":"All devices are connected. It depends on knowing how many device connections it must look after as described in exercise 3.3 .","title":"All mqtt connections are connected"},{"location":"user_guide/#all-mqtt-connections-are-trying-to-connect","text":"All connections are either disconnected or connecting trying to establish a connection for all devices. This might be caused by lack of internet connectivity for the RPE.","title":"All mqtt connections are trying to connect"},{"location":"user_guide/#at-least-one-but-not-all-connections-are-connected","text":"This can be caused by faulty credentials in one or more mqtt out nodes, but not in all of them.","title":"At least one but not all connections are connected"},{"location":"user_guide/#waiting-for-connecting-status","text":"This may be caused by a mismatch between the number of connections defined and the number of mqtt out nodes the status node are listening to - as described in exercise 3.3 .","title":"Waiting for connecting status"},{"location":"user_guide/#day-of-week-including-operation-status","text":"The seven LED's to the right in the lower row each represents a day in the week, starting with Monday. Green means the RPE is running. The RPE will initiate a 5 minutes run under load every 0, 15, 30, 45 minutes past the top of the hour in the period: 8 am to 6 pm CET Monday to Friday. It will measure and submit data every 10 seconds while being in the running mode. Red means the RPE is idle, meaning outside of working hours or in the weekend. It will not run any loads and will only measure and send every 20 minutes.","title":"Day of week including operation status"},{"location":"user_guide/#rpe-is-in-working-hour-on-a-tuesday","text":"It is Tuesday between 8am and 6pm CET and all connections are up and running.","title":"RPE is in working hour on a Tuesday"},{"location":"user_guide/#rpe-is-in-idle-mode-on-a-saturday","text":"It is Saturday at any time as it is weekend ;-)","title":"RPE is in idle mode on a Saturday"},{"location":"user_guide/#the-four-bars","text":"The four bars represent the following four measurements: cl: CPU Load ct: CPU Temperature ot: Oscillator Temperature et: Environment Temperature (from the SenseHat) Color Meaning value in % or C is within RED X > 80 YELLOW 60 >= X <80 GREEN 40 >= X <60 GREEN 20 >= X <40 GREEN X <20","title":"The four bars"},{"location":"user_guide/#example-1","text":"It is Wednesday between 8am and 6pm CET and all connections are up and running. The CPU Load is low, hence the temperatures are also relatively low.","title":"Example 1"},{"location":"user_guide/#example-2","text":"It is Wednesday between 8am and 6pm CET and all connections are up and running. The CPU Load is high between 60 and 80%. The CPU Temperature is between 60 and 80 C. The Oscillator Temperature is above 80 C. The Env, Temperature is between 20 and 40 C.","title":"Example 2"},{"location":"user_guide/#3-operate-the-rpe-using-the-sensehat-joystick","text":"","title":"3. Operate the RPE using the SenseHAT joystick"},{"location":"user_guide/#overview_1","text":"This section will explain the options the SenseHAT joystick delivers to operate the RPE. You should look at it from this angle, which means the power chord and/or the HDMI cable is pointing away from you: The joystick currently has 4 actions available: Down click Up click Enter click Hold to the left Attention Please be patient when using the joystick \u2013 it might take up to 20 seconds before you see the response on the SenseHAT LED Matrix.","title":"Overview"},{"location":"user_guide/#down-click","text":"The down click shows scrolling text about network information changing between: IP Address in blue WiFi SSID in yellow MAC Address in green","title":"Down Click"},{"location":"user_guide/#up-click","text":"The up click shows scrolling text about RPE information changing between: The RPE ID in blue Software version of the Node-Red script in yellow Hardware version of the Raspberry Pi in green","title":"Up Click"},{"location":"user_guide/#enter-click","text":"Clicking on the enter button toggles the LED display off and on.","title":"Enter Click"},{"location":"user_guide/#hold-left","text":"Holding the joystick left during some seconds will initiate an immediate SHUTDOWN of the RPE. This is in fact the best way to close down a Raspberry Pi minimizing the risk of damaging the SD card. Handle with care!!","title":"Hold Left"},{"location":"user_guide/#4-use-the-rpe-local-dashboard","text":"","title":"4. Use the RPE local dashboard"},{"location":"user_guide/#overview_2","text":"The RPE have a local dashboard where you can see the measurements and some additional information. They are accessible on http://<the RPE IP Address>:1880/ui . The following three dashboards are available: RP Engine \u2013 Shows some Rasperry Pi measurements (CPU and OSC values) RP Environment \u2013 Shows some SenseHAT measurements RPE Control \u2013 shows some RPE information","title":"Overview"},{"location":"user_guide/#rp-engine-idle-example","text":"All measurements are within normal Idle mode.","title":"RP Engine \u2013 Idle Example"},{"location":"user_guide/#rp-engine-load-example","text":"All measurements are either high or very high when running under Load mode.","title":"RP Engine \u2013 Load Example"},{"location":"user_guide/#rp-environment","text":"These measurements are done in the SenseHat and covers: Temperature (et) Relative Humidity (eh) Atmospheric Pressure (ep)","title":"RP Environment"},{"location":"user_guide/#rpe-control","text":"Information about the RPE software version and the Raspberry Pi hardware is available. Two buttons are available to either Reboot or shutdown the RPE. Handle with care!!","title":"RPE Control"},{"location":"verify_rpe/","text":"Objectives In this Exercise you will learn how to verify that the data is bing delivered from RPE to MAS Monitor. Data is being send once all mqtt out nodes are in state connected. You will verify the setup by watching the data being send to the MAS Maximo Monitor instance you have access to. 1. Login a. Login to your instance of Maximo Application Suite: b. Go to the Tools tab and click on IoT: c. A new browser tab opens with the MAS Watson IoT Platform Service. \u2003 2. Verify data is being received. a. Go to the Devices tab: b. Enter RPE042 in the Search field and you should see all three devices in a Connected status: c. Expand one of the devices and select Recent Events. After a few seconds you should see data being received: d. Click on one of the event payloads: e. Repeat step c and d for the two other devices \u2013 just to verify data is being received. Tip These properties are abbreviations for different measurements. They are explained in the RPE User Guide as well as the meaning of the SenseHAT LEDs. f. This concludes this exercise.","title":"4. Verify RPE is working"},{"location":"verify_rpe/#objectives","text":"In this Exercise you will learn how to verify that the data is bing delivered from RPE to MAS Monitor. Data is being send once all mqtt out nodes are in state connected. You will verify the setup by watching the data being send to the MAS Maximo Monitor instance you have access to.","title":"Objectives"},{"location":"verify_rpe/#1-login","text":"a. Login to your instance of Maximo Application Suite: b. Go to the Tools tab and click on IoT: c. A new browser tab opens with the MAS Watson IoT Platform Service.","title":"1. Login"},{"location":"verify_rpe/#2-verify-data-is-being-received","text":"a. Go to the Devices tab: b. Enter RPE042 in the Search field and you should see all three devices in a Connected status: c. Expand one of the devices and select Recent Events. After a few seconds you should see data being received: d. Click on one of the event payloads: e. Repeat step c and d for the two other devices \u2013 just to verify data is being received. Tip These properties are abbreviations for different measurements. They are explained in the RPE User Guide as well as the meaning of the SenseHAT LEDs. f. This concludes this exercise.","title":"2. Verify data is being received."}]}