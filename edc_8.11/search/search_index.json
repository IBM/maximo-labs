{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to the Maximo Monitor Edge Data Collector Lab You will learn about how to setup an integration for an Edge Data Collector within Maximo Monitor. In this lab you will learn the steps needed to successfully setup an integration using some virtual simulated Variable Frequency Drives (VFD) that will deliver the device data over Modbus/TCP via Edge Data Collector into Maximo Monitor using the pre-configured connector for Lenze i550 VFD from the Device Connector Library. The exercises will cover: Setting up the simulator environment Create the needed device types in Maximo Monitor Create an Edge Data Collector Integration Verify data flow from Modbus/TCP Variable Frequency Drives all the way into Maximo Monitor Have fun Note Expected time needed to run the complete lab: 1 hour Updated: 2024-04-23","title":"Welcome"},{"location":"#welcome-to-the-maximo-monitor-edge-data-collector-lab","text":"You will learn about how to setup an integration for an Edge Data Collector within Maximo Monitor. In this lab you will learn the steps needed to successfully setup an integration using some virtual simulated Variable Frequency Drives (VFD) that will deliver the device data over Modbus/TCP via Edge Data Collector into Maximo Monitor using the pre-configured connector for Lenze i550 VFD from the Device Connector Library. The exercises will cover: Setting up the simulator environment Create the needed device types in Maximo Monitor Create an Edge Data Collector Integration Verify data flow from Modbus/TCP Variable Frequency Drives all the way into Maximo Monitor Have fun Note Expected time needed to run the complete lab: 1 hour Updated: 2024-04-23","title":"Welcome to the Maximo Monitor Edge Data Collector Lab"},{"location":"deploy/","text":"Objectives In this Exercise you will learn how to: Deploy the EDC Integration on the EDC edge Verify data flowing into the IoT Tool in Maximo Monitor Before you begin: This Exercise requires that you have: completed the pre-requisites required for all labs and for this exercise completed the previous exercises verified the simulator is running as described in exercise 1 Deploy the EDC Integration on the EDC edge At the end of the previous exercise the Deployment guide appeared. Click on the docker command to copy it to the clipboard: Open a terminal window (Mac/Linux) or Command window (Windows) on the EDC edge and then paste the docker command line from the clipboard. Click enter to execute it, and you should see something similar to the following: Verify data flowing into the IoT Tool Navigate to the IoT Tool from the Monitor Home page: Since the gateway and the devices uses the same pre-fix, then it is easy to search for them. Verify the XX_EDC_GW_01 is in Connected state - and the two devices have been created automatically by the gateway. Tip The devices created by the gateway will always be in Disconnected state, as they receive their data through the gateway. Select one of the two simulated Lenze i550 devices and navigate to Recent Events : Wait for a couple of minutes (you know those 60000ms defined in the Integration) until you see the first messages coming through: Click on the last received payload: and see the data points that was selected in the Integration: And see the data points that was selected in the Integration being send on the status event type: { \"timestamp\": \"2023-09-25T12:26:05.508843Z\", \"motor_current_ampere\": 9.600000000000001, \"output_frequency_hertz\": 36.65, \"dc_bus_voltage_volt\": 401, \"motor_torque_percent\": 66, \"supply_voltage_volt\": 283.5498192558055, \"frequency_command_hertz\": 36.65, \"motor_voltage_volt\": 700, \"control_card_temperature_degree_celsius\": 23 } Congratulations you have successfully deployed and verified the EDC Integration.","title":"4. Deploy and verify integration"},{"location":"deploy/#objectives","text":"In this Exercise you will learn how to: Deploy the EDC Integration on the EDC edge Verify data flowing into the IoT Tool in Maximo Monitor Before you begin: This Exercise requires that you have: completed the pre-requisites required for all labs and for this exercise completed the previous exercises verified the simulator is running as described in exercise 1","title":"Objectives"},{"location":"deploy/#deploy-the-edc-integration-on-the-edc-edge","text":"At the end of the previous exercise the Deployment guide appeared. Click on the docker command to copy it to the clipboard: Open a terminal window (Mac/Linux) or Command window (Windows) on the EDC edge and then paste the docker command line from the clipboard. Click enter to execute it, and you should see something similar to the following:","title":"Deploy the EDC Integration on the EDC edge"},{"location":"deploy/#verify-data-flowing-into-the-iot-tool","text":"Navigate to the IoT Tool from the Monitor Home page: Since the gateway and the devices uses the same pre-fix, then it is easy to search for them. Verify the XX_EDC_GW_01 is in Connected state - and the two devices have been created automatically by the gateway. Tip The devices created by the gateway will always be in Disconnected state, as they receive their data through the gateway. Select one of the two simulated Lenze i550 devices and navigate to Recent Events : Wait for a couple of minutes (you know those 60000ms defined in the Integration) until you see the first messages coming through: Click on the last received payload: and see the data points that was selected in the Integration: And see the data points that was selected in the Integration being send on the status event type: { \"timestamp\": \"2023-09-25T12:26:05.508843Z\", \"motor_current_ampere\": 9.600000000000001, \"output_frequency_hertz\": 36.65, \"dc_bus_voltage_volt\": 401, \"motor_torque_percent\": 66, \"supply_voltage_volt\": 283.5498192558055, \"frequency_command_hertz\": 36.65, \"motor_voltage_volt\": 700, \"control_card_temperature_degree_celsius\": 23 } Congratulations you have successfully deployed and verified the EDC Integration.","title":"Verify data flowing into the IoT Tool"},{"location":"edc_integration/","text":"Objectives In this Exercise you will learn how to: Create an Edge Data Collector (EDC) Integration in Monitor Add an endpoint to the Integration Add devices to the Integration Before you begin: This Exercise requires that you have: completed the pre-requisites required for all labs completed the previous exercises A good starting point is to get the IP address of the industrial devices you need to collect the data from - in this case the machine the Modbus simulator is running on. The way to get it depends on the OS: Windows: Open a CMD window and execute ipconfig MacOS: Open a terminal and execute ifconfig -en0 Linux: Open a terminal and execute hostname -I I was running the simulator on my local network on a machine with the IP address: 192.168.1.42. Create a new Edge Data Collector (EDC) Integration in Monitor Navigate to the Configure devices in Edge Data Collector from the Monitor Home page: Click on Add integration : Give it a name: Add an endpoint The endpoint of the Integration configuration is where the gateway connection credentials we defined previously has to be added. This is where the EDC edge will send the unified data to once collected from the industrial devices. Click on Add endpoint and the select Maximo : Add the credentials you saved in the previous exercise and click Finish : Tip The URL is defined by <MAS tenant id>.messaging.iot.<MAS domain> Add devices EDC provides a vast library of pre-configured connectors for a range of industrial devices. It is time to add the Lenze i550 devices. Click on Add device ; Search for Lenze in the manufacurer drop-down and select it: Select the i550 product and click Next : Give the device a name. This will become the Device ID in Monitor. Select Modbus TCP. Enter the IP Address where the Modbus simulator is running including the port number after the colon: Select the eight first tags. Change the Base Frequency to 60000 ms (1 minute), which will change all the Frequency fields of the selected tags. Click Finish : Tip Standardized metrics use labels, units, and values that are unified to the standard Edge Data Collector device type. Synthesized metrics are created by using other metrics. Some standardized metrics are synthesized, but the metrics are listed as only standardized metrics. Once the first Lenze device is created it is easy to duplicate it for the second one: Enter the Device name and the IP address with port number of the other simulator. Click Next : The data point settings are cloned automatically. Click Finish . A red box in the upper right corner indicates that the changes you have made to the integrationn have not yet been deployed. Click on Save and deploy : The Deployment guide appears: Congratulations you have successfully created an Edge Data Collector Integration.","title":"3. Create EDC Integration"},{"location":"edc_integration/#objectives","text":"In this Exercise you will learn how to: Create an Edge Data Collector (EDC) Integration in Monitor Add an endpoint to the Integration Add devices to the Integration Before you begin: This Exercise requires that you have: completed the pre-requisites required for all labs completed the previous exercises A good starting point is to get the IP address of the industrial devices you need to collect the data from - in this case the machine the Modbus simulator is running on. The way to get it depends on the OS: Windows: Open a CMD window and execute ipconfig MacOS: Open a terminal and execute ifconfig -en0 Linux: Open a terminal and execute hostname -I I was running the simulator on my local network on a machine with the IP address: 192.168.1.42.","title":"Objectives"},{"location":"edc_integration/#create-a-new-edge-data-collector-edc-integration-in-monitor","text":"Navigate to the Configure devices in Edge Data Collector from the Monitor Home page: Click on Add integration : Give it a name:","title":"Create a new Edge Data Collector (EDC) Integration in Monitor"},{"location":"edc_integration/#add-an-endpoint","text":"The endpoint of the Integration configuration is where the gateway connection credentials we defined previously has to be added. This is where the EDC edge will send the unified data to once collected from the industrial devices. Click on Add endpoint and the select Maximo : Add the credentials you saved in the previous exercise and click Finish : Tip The URL is defined by <MAS tenant id>.messaging.iot.<MAS domain>","title":"Add an endpoint"},{"location":"edc_integration/#add-devices","text":"EDC provides a vast library of pre-configured connectors for a range of industrial devices. It is time to add the Lenze i550 devices. Click on Add device ; Search for Lenze in the manufacurer drop-down and select it: Select the i550 product and click Next : Give the device a name. This will become the Device ID in Monitor. Select Modbus TCP. Enter the IP Address where the Modbus simulator is running including the port number after the colon: Select the eight first tags. Change the Base Frequency to 60000 ms (1 minute), which will change all the Frequency fields of the selected tags. Click Finish : Tip Standardized metrics use labels, units, and values that are unified to the standard Edge Data Collector device type. Synthesized metrics are created by using other metrics. Some standardized metrics are synthesized, but the metrics are listed as only standardized metrics. Once the first Lenze device is created it is easy to duplicate it for the second one: Enter the Device name and the IP address with port number of the other simulator. Click Next : The data point settings are cloned automatically. Click Finish . A red box in the upper right corner indicates that the changes you have made to the integrationn have not yet been deployed. Click on Save and deploy : The Deployment guide appears: Congratulations you have successfully created an Edge Data Collector Integration.","title":"Add devices"},{"location":"monitor_devices/","text":"Objectives In this Exercise you will learn how to: create the credentials for the Edge Data Collector (EDC) edge entity pre-create the device type for the Variable Frequency Drives (VFD's) Before you begin: This Exercise requires that you have: completed the pre-requisites required for all labs completed the previous exercises The Edge Data Collector edge uses the Maximo Monitor capability to use the priveledged gateway device type, which enables the automatic creation of new devices when data is delivered from the gateway on behalf of them. Attention This exercise will use the new version of device types introduced in MAS 8.8 which do not require physical and logical interfaces before saving the data in the database and making it available within Monitor. However, this currently require you to create the device type for the VFDs manually up front, as automatically creating that through the gateway will result in the classic version of the device type which will require the physical and logical interfaces before the data is available in Monitor. Create the EDC edge gateway in Monitor In this section you will create the credentials for the EDC edge gateway, so the EDC edge can connect to Maximo Monitor. Login to MAS and navigate to Monitor: Navigate to the IoT Tool from the Monitor Home page: It opens a new tab. Navigate to Device Types: Select Add Device Type : Select Gateway , give it the name XX_EDC_GW and a short description. Click Next and Finish : Tip XX in the device type name should be your initials in case other people are following this lab in the same Maximo Application Suite environment. Select Register Devices : Define the Device Id XX_EDC_GW_01 . Click Next : OPTIONAL: Add a Model name Edge Data Collector and Manufacturer name IBM . Click Next : Just click Next : Select Privileged Gateway and click Next : Click Next to let the system auto generate an authentication token: Just click Finish : You will see the created Device credentials: Save these credentials It is very important, that you save these credentials as you need them in the next exercise AND the authentication token is non-recoverable once you navigate away from this page. The gateway is now created in the IoT Tool and it will appear as Disconnected until the physical EDC Edge connects: Pre-create device type for the VFDs You need to create the device type for the VFD\u00b4s manually in Monitor to ensure the right version of Device Type is being used later on. Navigate to Setup from the Monitor Home page: Select Devices : Click on Add device type : Select Basic template as this will create the new version of the device type and click Next : Define the Device type name as VariableFrequencyDrives ( exactly like this ), give it a description and press Create : Note We will define the metrics in a later exersice once we have defined the data points in the EDC Integration. Tip Here is the list of the current canonical models defined within EDC using PascalCase : Device type Device Type in Monitor Variable Frequency Drives VariableFrequencyDrives Variable Air Volume VariableAirVolume Uninterruptible Power Supplies UninterruptiblePowerSupplies Power Meters PowerMeters Circuit Breakers CircuitBreakers Protection Relays ProtectionRelays Heat Meters HeatMeters Gas Flow Meters GasFlowMeters Congratulations you have successfully created the needed gateway in the IoT Tool and the needed device type in Monitor.","title":"2. Create Monitor Devices"},{"location":"monitor_devices/#objectives","text":"In this Exercise you will learn how to: create the credentials for the Edge Data Collector (EDC) edge entity pre-create the device type for the Variable Frequency Drives (VFD's) Before you begin: This Exercise requires that you have: completed the pre-requisites required for all labs completed the previous exercises The Edge Data Collector edge uses the Maximo Monitor capability to use the priveledged gateway device type, which enables the automatic creation of new devices when data is delivered from the gateway on behalf of them. Attention This exercise will use the new version of device types introduced in MAS 8.8 which do not require physical and logical interfaces before saving the data in the database and making it available within Monitor. However, this currently require you to create the device type for the VFDs manually up front, as automatically creating that through the gateway will result in the classic version of the device type which will require the physical and logical interfaces before the data is available in Monitor.","title":"Objectives"},{"location":"monitor_devices/#create-the-edc-edge-gateway-in-monitor","text":"In this section you will create the credentials for the EDC edge gateway, so the EDC edge can connect to Maximo Monitor. Login to MAS and navigate to Monitor: Navigate to the IoT Tool from the Monitor Home page: It opens a new tab. Navigate to Device Types: Select Add Device Type : Select Gateway , give it the name XX_EDC_GW and a short description. Click Next and Finish : Tip XX in the device type name should be your initials in case other people are following this lab in the same Maximo Application Suite environment. Select Register Devices : Define the Device Id XX_EDC_GW_01 . Click Next : OPTIONAL: Add a Model name Edge Data Collector and Manufacturer name IBM . Click Next : Just click Next : Select Privileged Gateway and click Next : Click Next to let the system auto generate an authentication token: Just click Finish : You will see the created Device credentials: Save these credentials It is very important, that you save these credentials as you need them in the next exercise AND the authentication token is non-recoverable once you navigate away from this page. The gateway is now created in the IoT Tool and it will appear as Disconnected until the physical EDC Edge connects:","title":"Create the EDC edge gateway in Monitor"},{"location":"monitor_devices/#pre-create-device-type-for-the-vfds","text":"You need to create the device type for the VFD\u00b4s manually in Monitor to ensure the right version of Device Type is being used later on. Navigate to Setup from the Monitor Home page: Select Devices : Click on Add device type : Select Basic template as this will create the new version of the device type and click Next : Define the Device type name as VariableFrequencyDrives ( exactly like this ), give it a description and press Create : Note We will define the metrics in a later exersice once we have defined the data points in the EDC Integration. Tip Here is the list of the current canonical models defined within EDC using PascalCase : Device type Device Type in Monitor Variable Frequency Drives VariableFrequencyDrives Variable Air Volume VariableAirVolume Uninterruptible Power Supplies UninterruptiblePowerSupplies Power Meters PowerMeters Circuit Breakers CircuitBreakers Protection Relays ProtectionRelays Heat Meters HeatMeters Gas Flow Meters GasFlowMeters Congratulations you have successfully created the needed gateway in the IoT Tool and the needed device type in Monitor.","title":"Pre-create device type for the VFDs"},{"location":"monitor_metrics/","text":"Objectives In this Exercise you will learn how to: create the metrics for the devices in Monitor Now the data is being collected at the edge, unified and send to the IoT Tool in Maximo Monitor. You need to define the metrics on the device type level in Maximo Monitor in order to store the selected data in the Maximo Monitor database and make it available for further analysis and visualization. Before you begin: This Exercise requires that you have: completed the pre-requisites required for all labs completed the previous exercises Navigate to Setup from the Monitor Home page: Select Devices : Search for the VariableFrequencyDrives device type and click on Set up device type : No metrics are available. Click on Identity : Click on Add metric : Click on Add metric : Enter motor_voltage_volt as the Metric, Motor_Voltage as the Display name, status as the Event, NUMBER as the Type, and V as the Unit. Click on Add metric : Add the following metrics and click Add . Tip Here are the Metric names you need to use, as they are delivered by the EDC edge: motor_voltage_volt motor_current_ampere motor_torque_percent dc_bus_voltage_volt output_frequency_hertz timestamp Attention Be aware that the Event name and the Metric names are case sensitive - and all in small letters. Click on the toggle to the left of status . Select the Use this as the default timestamp so you use the timestamp provided from the devices rather than from the time of the data injection. Click Save : Finally, you will verify that the data is available for Monitor analytics and dashboards. Wait a couple of minnutes for newly received data points to be stored in Maximo Monitor. Click on the Data tab. Expand Metric . Select Motor_Current and Data table : Congratulations you have successfully: setup a couple of simulated Lenze i500 variable frequency drives created the needed gateway in the IoT Tool and device type in Monitor created an Edge Data Collector Integration by defining endpoint, devices and their tags (metrics) deployed the EDC Integration on an EDC Edge and the device data has been collected, unified and send to Maximo Monitor received the unified data in the IoT Tool and selected a subset of the metrics to be stored in the Maximo Monitor database to be available for further analysis and visualization, like the example below:","title":"5. Create Monitor metric"},{"location":"monitor_metrics/#objectives","text":"In this Exercise you will learn how to: create the metrics for the devices in Monitor Now the data is being collected at the edge, unified and send to the IoT Tool in Maximo Monitor. You need to define the metrics on the device type level in Maximo Monitor in order to store the selected data in the Maximo Monitor database and make it available for further analysis and visualization. Before you begin: This Exercise requires that you have: completed the pre-requisites required for all labs completed the previous exercises Navigate to Setup from the Monitor Home page: Select Devices : Search for the VariableFrequencyDrives device type and click on Set up device type : No metrics are available. Click on Identity : Click on Add metric : Click on Add metric : Enter motor_voltage_volt as the Metric, Motor_Voltage as the Display name, status as the Event, NUMBER as the Type, and V as the Unit. Click on Add metric : Add the following metrics and click Add . Tip Here are the Metric names you need to use, as they are delivered by the EDC edge: motor_voltage_volt motor_current_ampere motor_torque_percent dc_bus_voltage_volt output_frequency_hertz timestamp Attention Be aware that the Event name and the Metric names are case sensitive - and all in small letters. Click on the toggle to the left of status . Select the Use this as the default timestamp so you use the timestamp provided from the devices rather than from the time of the data injection. Click Save : Finally, you will verify that the data is available for Monitor analytics and dashboards. Wait a couple of minnutes for newly received data points to be stored in Maximo Monitor. Click on the Data tab. Expand Metric . Select Motor_Current and Data table : Congratulations you have successfully: setup a couple of simulated Lenze i500 variable frequency drives created the needed gateway in the IoT Tool and device type in Monitor created an Edge Data Collector Integration by defining endpoint, devices and their tags (metrics) deployed the EDC Integration on an EDC Edge and the device data has been collected, unified and send to Maximo Monitor received the unified data in the IoT Tool and selected a subset of the metrics to be stored in the Maximo Monitor database to be available for further analysis and visualization, like the example below:","title":"Objectives"},{"location":"prereqs/","text":"Pre-Requisite Instructions Here are the pre-requisites for the Maximo Monitor Edge Data Collector exercises. Attention This lab requires Maximo Monitor 8.11 or later. MAS application entitlement must be Limited or higher. All Exercises All Exercises require that you have: A computer with a Chrome or Firefox browser and internet connectivity. User access to a Maximo Application Suite environment that can create privileged gateways in the IoT tool. This require: o Your user must have access to Monitor and the IoT Tool o Your user must have administrator access to Maximo Application Suite. Your Exercise facilitator should have provided you with the information on your access. An IBM ID. If you don't have an IBM ID you can get one here : o Click Login to MY IBM button o Click Create an IBM ID link Test your access to the Maximo Application Suite environment. Exercise 4 Docker must be running on your local machine while acting as the Edge Data Collector instance. There are different ways to install the Docker engine depending of the package and the OS. One multi platform option is Rancher Desktop. It is fairly easy to install Rancher Desktop, as you just have to follow this guide: Running Docker locally","title":"Pre-Requisites"},{"location":"prereqs/#pre-requisite-instructions","text":"Here are the pre-requisites for the Maximo Monitor Edge Data Collector exercises. Attention This lab requires Maximo Monitor 8.11 or later. MAS application entitlement must be Limited or higher.","title":"Pre-Requisite Instructions"},{"location":"prereqs/#all-exercises","text":"All Exercises require that you have: A computer with a Chrome or Firefox browser and internet connectivity. User access to a Maximo Application Suite environment that can create privileged gateways in the IoT tool. This require: o Your user must have access to Monitor and the IoT Tool o Your user must have administrator access to Maximo Application Suite. Your Exercise facilitator should have provided you with the information on your access. An IBM ID. If you don't have an IBM ID you can get one here : o Click Login to MY IBM button o Click Create an IBM ID link Test your access to the Maximo Application Suite environment.","title":"All Exercises"},{"location":"prereqs/#exercise-4","text":"Docker must be running on your local machine while acting as the Edge Data Collector instance. There are different ways to install the Docker engine depending of the package and the OS. One multi platform option is Rancher Desktop. It is fairly easy to install Rancher Desktop, as you just have to follow this guide: Running Docker locally","title":"Exercise 4"},{"location":"release_notes/","text":"Contributors to the Maximo Monitor Edge Data Collector Lab Jan Ekstr\u00f8m - jan.ekstrom@dk.ibm.com Change Information Date By Description 2024-04-23 Jan Ekstr\u00f8m Updated to use a new modbus simulator. 2023-12-30 Jan Ekstr\u00f8m Restructured to work on Github Pages. 2023-09-23 Jan Ekstr\u00f8m Lab is ready for the first release. 2023-09-16 Jan Ekstr\u00f8m Replicated the Omnio Edge lab to this Edge Data Collector lab.","title":"Release Notes"},{"location":"release_notes/#contributors-to-themaximo-monitor-edge-data-collector-lab","text":"Jan Ekstr\u00f8m - jan.ekstrom@dk.ibm.com","title":"Contributors to theMaximo Monitor Edge Data Collector Lab"},{"location":"release_notes/#change-information","text":"Date By Description 2024-04-23 Jan Ekstr\u00f8m Updated to use a new modbus simulator. 2023-12-30 Jan Ekstr\u00f8m Restructured to work on Github Pages. 2023-09-23 Jan Ekstr\u00f8m Lab is ready for the first release. 2023-09-16 Jan Ekstr\u00f8m Replicated the Omnio Edge lab to this Edge Data Collector lab.","title":"Change Information"},{"location":"setup/","text":"Objectives In this Exercise you will learn how to: Install the Modbus simulator Before you begin: This Exercise requires that you have: completed the pre-requisites required for all labs The simulator in this exercice has been replaced with a dynamic multi-platform Modbus simulator which you can install by following this lab: IBM Maximo Monitor Modbus Simulator Lab Note This lab used to use the Windows based Unslave modbus silumator. You can find the deprecated setup her: Windows Unslave Simulater Congratulations you have successfully setup the simulator environment.","title":"1. Setup Simulator Environment"},{"location":"setup/#objectives","text":"In this Exercise you will learn how to: Install the Modbus simulator Before you begin: This Exercise requires that you have: completed the pre-requisites required for all labs The simulator in this exercice has been replaced with a dynamic multi-platform Modbus simulator which you can install by following this lab: IBM Maximo Monitor Modbus Simulator Lab Note This lab used to use the Windows based Unslave modbus silumator. You can find the deprecated setup her: Windows Unslave Simulater Congratulations you have successfully setup the simulator environment.","title":"Objectives"},{"location":"setup_unslave/","text":"Objectives In this Exercise you will learn how to: Prepare a Windows environment for the Modbus simulator Install the Modbus simulator Configure the Modbus simulator Before you begin: This Exercise requires that you have: completed the pre-requisites required for all labs Tip You can Right-Click on the images in this lab and select Open Image in New Tab to view the details in the screen shots: or use the browsers zoom function. *NOTE: Information about the Modbus simulator can be found further down in this lab. Prepare a Windows environment You need to have a Windows based environment with at static IP Address in which the Modbus simulator will run as that is required by the integration configurator. IBM Cloud Classic Infrastructure with a Windows Server 2019 instance has been used in this lab. The Modbus simulator requires port 502 to be open in the firewall for incoming traffic. Install the Modbus simulator We use the free Modbus simulator from Unserver to provide a couple of simulated Lenze i550 Variable Frequency Drives (VFD) for the purpose of this lab. Go to the Unslave download page and download the ZIP file. Unzip the downloaded file: and navigate into the unslave folder: No further installation is needed. Configure the Modbus simulator The config.json file contain the configuration of the Unslave Modbus simulator. Start by renaming it to save a copy: then download the config.json that contains the holding registers for 10 Lenze i550 VFD's. You can get it here: config.json Copy it into the Windows environment in the unslave folder: Double-click on the unslave application to start the simulator: and you will see a CMD window that looks like this: Tip The Modbus holding registers defined in the config.json are static values. However the Unslave provide an API (on port 9000) to alter the values, which is not covered in this lab. Tip Another config file is available with 90 Lenze i550 devices in case you need that. You can get it here: config-90.json Congratulations you have successfully setup the simulator environment.","title":"Objectives"},{"location":"setup_unslave/#objectives","text":"In this Exercise you will learn how to: Prepare a Windows environment for the Modbus simulator Install the Modbus simulator Configure the Modbus simulator Before you begin: This Exercise requires that you have: completed the pre-requisites required for all labs Tip You can Right-Click on the images in this lab and select Open Image in New Tab to view the details in the screen shots: or use the browsers zoom function. *NOTE: Information about the Modbus simulator can be found further down in this lab.","title":"Objectives"},{"location":"setup_unslave/#prepare-a-windows-environment","text":"You need to have a Windows based environment with at static IP Address in which the Modbus simulator will run as that is required by the integration configurator. IBM Cloud Classic Infrastructure with a Windows Server 2019 instance has been used in this lab. The Modbus simulator requires port 502 to be open in the firewall for incoming traffic.","title":"Prepare a Windows environment"},{"location":"setup_unslave/#install-the-modbus-simulator","text":"We use the free Modbus simulator from Unserver to provide a couple of simulated Lenze i550 Variable Frequency Drives (VFD) for the purpose of this lab. Go to the Unslave download page and download the ZIP file. Unzip the downloaded file: and navigate into the unslave folder: No further installation is needed.","title":"Install the Modbus simulator"},{"location":"setup_unslave/#configure-the-modbus-simulator","text":"The config.json file contain the configuration of the Unslave Modbus simulator. Start by renaming it to save a copy: then download the config.json that contains the holding registers for 10 Lenze i550 VFD's. You can get it here: config.json Copy it into the Windows environment in the unslave folder: Double-click on the unslave application to start the simulator: and you will see a CMD window that looks like this: Tip The Modbus holding registers defined in the config.json are static values. However the Unslave provide an API (on port 9000) to alter the values, which is not covered in this lab. Tip Another config file is available with 90 Lenze i550 devices in case you need that. You can get it here: config-90.json Congratulations you have successfully setup the simulator environment.","title":"Configure the Modbus simulator"}]}