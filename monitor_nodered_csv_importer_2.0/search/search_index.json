{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to the Maximo Monitor Node-RED CSV Importer Lab You will learn about how to import historical data into Maximo Monitor (on MAS) through MQTT using CSV files and Node-RED. In this lab you will learn the steps needed to successfully import historical data. The steps will cover: Setting up your local Node-RED environment Inject device data directly to Monitor using a CSV file and Node-RED Inject device data from multiple devices through a gateway to Monitor using a CSV file and Node-RED Have fun Note Expected time needed to run the complete lab: less than 1 hour Updated: 2023-03-24","title":"Welcome"},{"location":"#welcome-to-the-maximo-monitor-node-red-csv-importer-lab","text":"You will learn about how to import historical data into Maximo Monitor (on MAS) through MQTT using CSV files and Node-RED. In this lab you will learn the steps needed to successfully import historical data. The steps will cover: Setting up your local Node-RED environment Inject device data directly to Monitor using a CSV file and Node-RED Inject device data from multiple devices through a gateway to Monitor using a CSV file and Node-RED Have fun Note Expected time needed to run the complete lab: less than 1 hour Updated: 2023-03-24","title":"Welcome to the Maximo Monitor Node-RED CSV Importer Lab"},{"location":"prereqs/","text":"Pre-Requisite Instructions Here are the pre-requisites for the Maximo Monitor Node-RED CSV Importer exercises that are designed for MAS Monitor and not the Maximo Asset Monitor SaaS edition. All Exercises All Exercises require that you have: A computer with a Chrome or Firefox browser and internet connectivity. User access to a Maximo Application Suite environment. Your Exercise facilitator should have provided you with the information on your access. An IBM ID. If you don't have an IBM ID you can get one here : o Click Login to MY IBM button o Click Create an IBM ID link Test your access to the Maximo Application Suite environment.","title":"Pre-Requisites"},{"location":"prereqs/#pre-requisite-instructions","text":"Here are the pre-requisites for the Maximo Monitor Node-RED CSV Importer exercises that are designed for MAS Monitor and not the Maximo Asset Monitor SaaS edition.","title":"Pre-Requisite Instructions"},{"location":"prereqs/#all-exercises","text":"All Exercises require that you have: A computer with a Chrome or Firefox browser and internet connectivity. User access to a Maximo Application Suite environment. Your Exercise facilitator should have provided you with the information on your access. An IBM ID. If you don't have an IBM ID you can get one here : o Click Login to MY IBM button o Click Create an IBM ID link Test your access to the Maximo Application Suite environment.","title":"All Exercises"},{"location":"release_notes/","text":"Contributors to the Maximo Monitor Node-RED CSV Importer Lab Jan Ekstr\u00f8m - jan.ekstrom@dk.ibm.com Mike Lamb - mllamb@us.ibm.com Change Information Date By Description 2023-12-30 Jan Ekstr\u00f8m Restructured to work on Github Pages. 2023-03-24 Jan Ekstr\u00f8m Updated the csv files and scripts to automatically timestamp data back in time from now. 2023-03-21 Jan Ekstr\u00f8m Added local Node-RED install + script updates. 2023-02-23 Mike Lamb First draft of V2 of this lab using MQTT as ingestion path. 2022-02-22 Jan Ekstr\u00f8m Dry runs performed, ready for Release. 2022-02-17 Jan Ekstr\u00f8m Ready for dry run. 2022-02-16 Jan Ekstr\u00f8m First draft version.","title":"Release Notes"},{"location":"release_notes/#contributors-to-themaximo-monitor-node-red-csv-importer-lab","text":"Jan Ekstr\u00f8m - jan.ekstrom@dk.ibm.com Mike Lamb - mllamb@us.ibm.com","title":"Contributors to theMaximo Monitor Node-RED CSV Importer Lab"},{"location":"release_notes/#change-information","text":"Date By Description 2023-12-30 Jan Ekstr\u00f8m Restructured to work on Github Pages. 2023-03-24 Jan Ekstr\u00f8m Updated the csv files and scripts to automatically timestamp data back in time from now. 2023-03-21 Jan Ekstr\u00f8m Added local Node-RED install + script updates. 2023-02-23 Mike Lamb First draft of V2 of this lab using MQTT as ingestion path. 2022-02-22 Jan Ekstr\u00f8m Dry runs performed, ready for Release. 2022-02-17 Jan Ekstr\u00f8m Ready for dry run. 2022-02-16 Jan Ekstr\u00f8m First draft version.","title":"Change Information"},{"location":"setup/","text":"Objectives In this Exercise you will learn how to: Install Node-RED locally Add required additional nodes Before you begin: This Exercise requires that you have: completed the pre-requisites required for all labs Install Node-RED locally This is a fairly easy step, as you just have to follow this guide: Running Node-RED locally Once installed and started open the browser and start the Node-RED editor. Attention Make sure you are running Node-RED v3+, i.e. if you already have an existing older Node-RED instance installed locally then make sure to upgrade it before proceeding. Add required additional nodes Before loading the Node-RED script you need to add the required additional node libraries. Node-RED library dependencies: - node-red-dashboard - node-red-contrib-ui-upload - node-red-contrib-chunks-to-lines Click on the burger menu in upper right hand corner and select Manage palette . Click on Install and write node-red-dashboard in the Search field - then click on Install . Click on Install again. Wait until you see the new nodes have been installed. Repeat step 2-4 for the other 2 libraries: node-red-contrib-ui-upload and node-red-contrib-chunks-to-lines . Congratulations you have successfully installed and prepared a local instance of Node-RED. You will now be ready to simulate a device or gateway in the following exercises.","title":"1. Setup Node-RED environment"},{"location":"setup/#objectives","text":"In this Exercise you will learn how to: Install Node-RED locally Add required additional nodes Before you begin: This Exercise requires that you have: completed the pre-requisites required for all labs","title":"Objectives"},{"location":"setup/#install-node-red-locally","text":"This is a fairly easy step, as you just have to follow this guide: Running Node-RED locally Once installed and started open the browser and start the Node-RED editor. Attention Make sure you are running Node-RED v3+, i.e. if you already have an existing older Node-RED instance installed locally then make sure to upgrade it before proceeding.","title":"Install Node-RED locally"},{"location":"setup/#add-required-additional-nodes","text":"Before loading the Node-RED script you need to add the required additional node libraries. Node-RED library dependencies: - node-red-dashboard - node-red-contrib-ui-upload - node-red-contrib-chunks-to-lines Click on the burger menu in upper right hand corner and select Manage palette . Click on Install and write node-red-dashboard in the Search field - then click on Install . Click on Install again. Wait until you see the new nodes have been installed. Repeat step 2-4 for the other 2 libraries: node-red-contrib-ui-upload and node-red-contrib-chunks-to-lines . Congratulations you have successfully installed and prepared a local instance of Node-RED. You will now be ready to simulate a device or gateway in the following exercises.","title":"Add required additional nodes"},{"location":"setup_device/","text":"Objectives In this Exercise you will learn how to setup Monitor to receive data from a CSV file that contains solar panel data. Create a device type and setup metrics in Monitor Create a device in Monitor to send events to Create a device type and setup metrics in Monitor Create a device type Go to Setup in Monitor Go to Devices tab Click on + button to create a device type Choose Basic template Next Enter a Device type name, e.g. XX_SolarPanel (replace XX with your initials). Take note of the name you give as you will need this in the Node-RED flow config Create Create Metrics in the device type Under Metrics section click Add metric Click Add metric a. Enter AC_POWER for Metric b. Enter AC_POWER for Display name c. Enter event_1 for Event d. Choose NUMBER for Type e. Enter Watt for Unit Click Add metric a. Enter DC_POWER for Metric b. Enter DC_POWER for Display name c. Choose event_1 for Event d. Choose NUMBER for Type e. Enter Watt for Unit Click Add metric a. Enter DAILY_YIELD for Metric b. Enter DAILY_YIELD for Display name c. Choose event_1 for Event d. Choose NUMBER for Type Click Add metric a. Enter TOTAL_YIELD for Metric b. Enter TOTAL_YIELD for Display name c. Choose event_1 for Event d. Choose NUMBER for Type Click Add metric a. Enter EVT_TIMESTAMP for Metric b. Enter EVT_TIMESTAMP for Display name c. Choose event_1 for Event d. Choose TIMESTAMP for Type Click Add Apply checkmark in the box to Use this as the default timestamp The metrics should look like this: Click Save Create a device in Monitor representing the device in the CSV file Click the blue Setup link in the top left which will take you to the device types list The device type you created should be selected Click on Add device + Enter 1BY6WEcLGh8j5v7 for name Choose Custom token Enter Pasword1! Click Add and Close Import Node-RED flow to import the CSV Download the flow Launch Node-RED Click on the burger menu and choose Import Click on select a file to import Choose the file downloaded in step 1. Click Import Configure Node-RED flow for your MAS Monitor environment Collect the following: * name of the device type created above, e.g. XX_SolarPanel * Messaging hostname which should look like this \u2002[tenant/workspace].messaging.iot.[domain] \u2002e.g. masdev.messaging.iot.monitordemo2.ibmmam.com Double click on the purple mqtt out node named Send MQTT event to a device in MAS Monitor Click on the pencil icon next to Server In the Server box replace with your Messaging hostname Click on the pencil icon next to TLS configuration In the Server Name box replace with your Messaging hostname Uncheck Verify server certificate and click Update The Client ID for a device looks like this: d:<tenant>:<device type>:<device ID> In the Client ID field replace masdev with your tenant/workspace name if it is not the same In the Client ID field replace XX_SolarPanel with your device type Click on the Security tab, write use-token-auth as the username and write Pasword1! as the Password Click Update Click Done Click Deploy in the top right corner You should now see a green dot and connected below the mqtt out node if all credentials were entered correctly: Run the Node-RED flow for a single device Download single_solar_panel.csv from github Click on the down arrow in the upper right corner in Node-RED and choose Dashboard Click on the launch arrow Click on Choose File or Browse under \"Upload CSV with a single device\" Select the single_solar_panel.csv file and click the right arrow play button Go back to the Node-RED flow window Under the light purple delay node it shows the amount of messages left to send to Monitor Under the green debug Progress node it shows the amount of messages that have been sent to Monitor Wait till the number under the light purple delay node shows 0. Progress node should say 1659. All the data has been ingested into Monitor Verify the data is in Monitor Go to Setup in Monitor Click on the Device Type created earlier in the lab Click on the black button \"Set up device type\" On the left side open Metric and then select AC_POWER Click on Data table to see the values of that metric Congratulations! You have ingested data from a CSV file into Monitor. Now you can explore creating calculated data metrics and dashboards in Monitor. Which could be something like this: Attention Please archive and delete your device type when it is no longer being used.","title":"2. Inject device data directly to Monitor"},{"location":"setup_device/#objectives","text":"In this Exercise you will learn how to setup Monitor to receive data from a CSV file that contains solar panel data. Create a device type and setup metrics in Monitor Create a device in Monitor to send events to","title":"Objectives"},{"location":"setup_device/#create-a-device-type-and-setup-metrics-in-monitor","text":"","title":"Create a device type and setup metrics in Monitor"},{"location":"setup_device/#create-a-device-type","text":"Go to Setup in Monitor Go to Devices tab Click on + button to create a device type Choose Basic template Next Enter a Device type name, e.g. XX_SolarPanel (replace XX with your initials). Take note of the name you give as you will need this in the Node-RED flow config Create","title":"Create a device type"},{"location":"setup_device/#create-metrics-in-the-device-type","text":"Under Metrics section click Add metric Click Add metric a. Enter AC_POWER for Metric b. Enter AC_POWER for Display name c. Enter event_1 for Event d. Choose NUMBER for Type e. Enter Watt for Unit Click Add metric a. Enter DC_POWER for Metric b. Enter DC_POWER for Display name c. Choose event_1 for Event d. Choose NUMBER for Type e. Enter Watt for Unit Click Add metric a. Enter DAILY_YIELD for Metric b. Enter DAILY_YIELD for Display name c. Choose event_1 for Event d. Choose NUMBER for Type Click Add metric a. Enter TOTAL_YIELD for Metric b. Enter TOTAL_YIELD for Display name c. Choose event_1 for Event d. Choose NUMBER for Type Click Add metric a. Enter EVT_TIMESTAMP for Metric b. Enter EVT_TIMESTAMP for Display name c. Choose event_1 for Event d. Choose TIMESTAMP for Type Click Add Apply checkmark in the box to Use this as the default timestamp The metrics should look like this: Click Save","title":"Create Metrics in the device type"},{"location":"setup_device/#create-a-device-in-monitor-representing-the-device-in-the-csv-file","text":"Click the blue Setup link in the top left which will take you to the device types list The device type you created should be selected Click on Add device + Enter 1BY6WEcLGh8j5v7 for name Choose Custom token Enter Pasword1! Click Add and Close","title":"Create a device in Monitor representing the device in the CSV file"},{"location":"setup_device/#import-node-red-flow-to-import-the-csv","text":"Download the flow Launch Node-RED Click on the burger menu and choose Import Click on select a file to import Choose the file downloaded in step 1. Click Import","title":"Import Node-RED flow to import the CSV"},{"location":"setup_device/#configure-node-red-flow-for-your-mas-monitor-environment","text":"Collect the following: * name of the device type created above, e.g. XX_SolarPanel * Messaging hostname which should look like this \u2002[tenant/workspace].messaging.iot.[domain] \u2002e.g. masdev.messaging.iot.monitordemo2.ibmmam.com Double click on the purple mqtt out node named Send MQTT event to a device in MAS Monitor Click on the pencil icon next to Server In the Server box replace with your Messaging hostname Click on the pencil icon next to TLS configuration In the Server Name box replace with your Messaging hostname Uncheck Verify server certificate and click Update The Client ID for a device looks like this: d:<tenant>:<device type>:<device ID> In the Client ID field replace masdev with your tenant/workspace name if it is not the same In the Client ID field replace XX_SolarPanel with your device type Click on the Security tab, write use-token-auth as the username and write Pasword1! as the Password Click Update Click Done Click Deploy in the top right corner You should now see a green dot and connected below the mqtt out node if all credentials were entered correctly:","title":"Configure Node-RED flow for your MAS Monitor environment"},{"location":"setup_device/#run-the-node-red-flow-for-a-single-device","text":"Download single_solar_panel.csv from github Click on the down arrow in the upper right corner in Node-RED and choose Dashboard Click on the launch arrow Click on Choose File or Browse under \"Upload CSV with a single device\" Select the single_solar_panel.csv file and click the right arrow play button Go back to the Node-RED flow window Under the light purple delay node it shows the amount of messages left to send to Monitor Under the green debug Progress node it shows the amount of messages that have been sent to Monitor Wait till the number under the light purple delay node shows 0. Progress node should say 1659. All the data has been ingested into Monitor","title":"Run the Node-RED flow for a single device"},{"location":"setup_device/#verify-the-data-is-in-monitor","text":"Go to Setup in Monitor Click on the Device Type created earlier in the lab Click on the black button \"Set up device type\" On the left side open Metric and then select AC_POWER Click on Data table to see the values of that metric Congratulations! You have ingested data from a CSV file into Monitor. Now you can explore creating calculated data metrics and dashboards in Monitor. Which could be something like this: Attention Please archive and delete your device type when it is no longer being used.","title":"Verify the data is in Monitor"},{"location":"setup_gateway/","text":"Objectives In this Exercise you will learn how to setup Monitor to receive data from a CSV file that contains solar panel data and send the data through a gateway. The gateway will create the devices in Monitor. Create a device type and setup metrics in Monitor Create a gateway in IoT to send events to the device type in Monitor Configure Node-RED flow Run Node-RED flow Verify the devices and data are in Monitor Create a device type and setup metrics in Monitor Tip If you have already done the previous exercise, then skip to Create a gateway in IoT and register a device and reuse the device type setup. Create a device type Go to Setup in Monitor Go to Devices tab Click on + button to create a device type Choose Basic template Next Enter a Device type name, e.g. XX_SolarPanel (replace XX with your initials). Take note of the name you give as you will need this in the Node-RED flow config Create Create Metrics in the device type Under Metrics section click Add metric Click Add metric a. Enter AC_POWER for Metric b. Enter AC_POWER for Display name c. Enter event_1 for Event d. Choose NUMBER for Type e. Enter Watt for Unit Click Add metric a. Enter DC_POWER for Metric b. Enter DC_POWER for Display name c. Choose event_1 for Event d. Choose NUMBER for Type e. Enter Watt for Unit Click Add metric a. Enter DAILY_YIELD for Metric b. Enter DAILY_YIELD for Display name c. Choose event_1 for Event d. Choose NUMBER for Type Click Add metric a. Enter TOTAL_YIELD for Metric b. Enter TOTAL_YIELD for Display name c. Choose event_1 for Event d. Choose NUMBER for Type Click Add metric a. Enter EVT_TIMESTAMP for Metric b. Enter EVT_TIMESTAMP for Display name c. Choose event_1 for Event d. Choose TIMESTAMP for Type Click Add Apply checkmark in the box to Use this as the default timestamp The metrics should look like this: Click Save Create a gateway in IoT and register a device Click the AppSwitcher in the top right corner and choose IoT Click on Device Types Click on Add Device Type Click on Type Gateway Enter a name for the gateway type, e.g. XX_SolarPanel_GW (replace XX with your initials). Take note of the name you give as you will need this in the Node-RED flow config Click Next Click Finish Click Register Devices Enter a name for the gateway device, e.g. XX_SolarPanel_GW01 (replace XX with your initials). Note: This is not the DEVICEID in your CSV file Click Next 4 times In Authenticaton Token enter Pasword1! and click Next Click Finish Import Node-RED flow to import the CSV Tip If you have already done the previous exercise, then skip to next step and use the Node-RED script already imported. Download the flow , if you have completed the previous device exercise skip these steps Launch Node-RED Click on the burger menu and choose Import Click on select a file to import Choose the file downloaded in step 1. Click Import Configure Node-RED flow \"CSV to MQTT to Monitor through a gateway\" Configure Node-RED flow for your MAS Monitor environment Collect the following (or skip if done in previous exercise): * name of the device type created above * Messaging hostname which should look like this \u2002[tenant/workspace].messaging.iot.[domain] \u2002e.g. masdev.messaging.iot.monitordemo2.ibmmam.com Update the device type Double click on the \"Set Flow Data\" function node in the Initializtion section Change the deviceType to the device type you created previously, e.g. XX_SolarPanel (replace XX with your initials). Click Done Update the Client ID Double click on the purple mqtt out node named Send MQTT event to a gateway in MAS Monitor Click on the pencil icon next to Server In the Server box replace with your Messaging hostname Click on the pencil icon next to TLS configuration In the Server Name box replace with your Messaging hostname Uncheck Verify server certificate and click Update The Client ID for a gateway looks like this: g:<tenant>:<device type>:<device ID> In the Client ID field replace masdev with your tenant/workspace name if it is not the same In the Client ID field replace XX_SolarPanel_GW with your gateway device type created above In the Client ID field replace XX_SolarPanel_GW01 with the device Id of your gateway created above Click on the Security tab, write use-token-auth as the username and write Pasword1! as the Password Click Update Click Done Click Deploy in the top right corner You should now see a green dot and connected below the mqtt out node if all credentials were entered correctly: Run the Node-RED flow for a gateway Download multiple_solar_panels.csv from github Click on the down arrow in the upper right corner in Node-RED and choose Dashboard Click on the launch arrow Click on Choose File or Browse under \"Upload CSV with multiple devices\" and select the recently downloadet CSV file. Select the multiple_solar_panels.csv file and click the right arrow play button Go back to the Node-RED flow window Under the light purple delay node it shows the amount of messages left to send to Monitor Under the green debug Progress node it shows the amount of messages that have been sent to Monitor All the data is ingested into Monitor once the number under the light purple delay node shows 0 but you can go ahead to the next step to verify data is going into Monitor. It will take approx. 11 minutes. Verify the devices and data in Monitor Go to Setup in Monitor Click on the Device Type created earlier in the lab See that 21 (+1 from previous exercise) devices were created in Monitor under the device type Click on the black button \"Set up device type\" On the left side open Metric and then select DAILY_YIELD Click on Data table to see the values of that metric and notice the different Device ID's Congratulations! You have ingested data from a CSV file into Monitor for several devices through a gateway. Now you can explore creating calculated data metrics and dashboards in Monitor. Which could be something like this: Attention Please archive and delete your device type when it is no longer being used.","title":"3. Inject device data through a gateway to Monitor"},{"location":"setup_gateway/#objectives","text":"In this Exercise you will learn how to setup Monitor to receive data from a CSV file that contains solar panel data and send the data through a gateway. The gateway will create the devices in Monitor. Create a device type and setup metrics in Monitor Create a gateway in IoT to send events to the device type in Monitor Configure Node-RED flow Run Node-RED flow Verify the devices and data are in Monitor","title":"Objectives"},{"location":"setup_gateway/#create-a-device-type-and-setup-metrics-in-monitor","text":"Tip If you have already done the previous exercise, then skip to Create a gateway in IoT and register a device and reuse the device type setup.","title":"Create a device type and setup metrics in Monitor"},{"location":"setup_gateway/#create-a-device-type","text":"Go to Setup in Monitor Go to Devices tab Click on + button to create a device type Choose Basic template Next Enter a Device type name, e.g. XX_SolarPanel (replace XX with your initials). Take note of the name you give as you will need this in the Node-RED flow config Create","title":"Create a device type"},{"location":"setup_gateway/#create-metrics-in-the-device-type","text":"Under Metrics section click Add metric Click Add metric a. Enter AC_POWER for Metric b. Enter AC_POWER for Display name c. Enter event_1 for Event d. Choose NUMBER for Type e. Enter Watt for Unit Click Add metric a. Enter DC_POWER for Metric b. Enter DC_POWER for Display name c. Choose event_1 for Event d. Choose NUMBER for Type e. Enter Watt for Unit Click Add metric a. Enter DAILY_YIELD for Metric b. Enter DAILY_YIELD for Display name c. Choose event_1 for Event d. Choose NUMBER for Type Click Add metric a. Enter TOTAL_YIELD for Metric b. Enter TOTAL_YIELD for Display name c. Choose event_1 for Event d. Choose NUMBER for Type Click Add metric a. Enter EVT_TIMESTAMP for Metric b. Enter EVT_TIMESTAMP for Display name c. Choose event_1 for Event d. Choose TIMESTAMP for Type Click Add Apply checkmark in the box to Use this as the default timestamp The metrics should look like this: Click Save","title":"Create Metrics in the device type"},{"location":"setup_gateway/#create-a-gateway-in-iot-and-register-a-device","text":"Click the AppSwitcher in the top right corner and choose IoT Click on Device Types Click on Add Device Type Click on Type Gateway Enter a name for the gateway type, e.g. XX_SolarPanel_GW (replace XX with your initials). Take note of the name you give as you will need this in the Node-RED flow config Click Next Click Finish Click Register Devices Enter a name for the gateway device, e.g. XX_SolarPanel_GW01 (replace XX with your initials). Note: This is not the DEVICEID in your CSV file Click Next 4 times In Authenticaton Token enter Pasword1! and click Next Click Finish","title":"Create a gateway in IoT and register a device"},{"location":"setup_gateway/#import-node-red-flow-to-import-the-csv","text":"Tip If you have already done the previous exercise, then skip to next step and use the Node-RED script already imported. Download the flow , if you have completed the previous device exercise skip these steps Launch Node-RED Click on the burger menu and choose Import Click on select a file to import Choose the file downloaded in step 1. Click Import","title":"Import Node-RED flow to import the CSV"},{"location":"setup_gateway/#configure-node-red-flow-csv-to-mqtt-to-monitor-through-a-gateway","text":"","title":"Configure Node-RED flow \"CSV to MQTT to Monitor through a gateway\""},{"location":"setup_gateway/#configure-node-red-flow-for-your-mas-monitor-environment","text":"Collect the following (or skip if done in previous exercise): * name of the device type created above * Messaging hostname which should look like this \u2002[tenant/workspace].messaging.iot.[domain] \u2002e.g. masdev.messaging.iot.monitordemo2.ibmmam.com","title":"Configure Node-RED flow for your MAS Monitor environment"},{"location":"setup_gateway/#update-the-device-type","text":"Double click on the \"Set Flow Data\" function node in the Initializtion section Change the deviceType to the device type you created previously, e.g. XX_SolarPanel (replace XX with your initials). Click Done","title":"Update the device type"},{"location":"setup_gateway/#update-the-client-id","text":"Double click on the purple mqtt out node named Send MQTT event to a gateway in MAS Monitor Click on the pencil icon next to Server In the Server box replace with your Messaging hostname Click on the pencil icon next to TLS configuration In the Server Name box replace with your Messaging hostname Uncheck Verify server certificate and click Update The Client ID for a gateway looks like this: g:<tenant>:<device type>:<device ID> In the Client ID field replace masdev with your tenant/workspace name if it is not the same In the Client ID field replace XX_SolarPanel_GW with your gateway device type created above In the Client ID field replace XX_SolarPanel_GW01 with the device Id of your gateway created above Click on the Security tab, write use-token-auth as the username and write Pasword1! as the Password Click Update Click Done Click Deploy in the top right corner You should now see a green dot and connected below the mqtt out node if all credentials were entered correctly:","title":"Update the Client ID"},{"location":"setup_gateway/#run-the-node-red-flow-for-a-gateway","text":"Download multiple_solar_panels.csv from github Click on the down arrow in the upper right corner in Node-RED and choose Dashboard Click on the launch arrow Click on Choose File or Browse under \"Upload CSV with multiple devices\" and select the recently downloadet CSV file. Select the multiple_solar_panels.csv file and click the right arrow play button Go back to the Node-RED flow window Under the light purple delay node it shows the amount of messages left to send to Monitor Under the green debug Progress node it shows the amount of messages that have been sent to Monitor All the data is ingested into Monitor once the number under the light purple delay node shows 0 but you can go ahead to the next step to verify data is going into Monitor. It will take approx. 11 minutes.","title":"Run the Node-RED flow for a gateway"},{"location":"setup_gateway/#verify-the-devices-and-data-in-monitor","text":"Go to Setup in Monitor Click on the Device Type created earlier in the lab See that 21 (+1 from previous exercise) devices were created in Monitor under the device type Click on the black button \"Set up device type\" On the left side open Metric and then select DAILY_YIELD Click on Data table to see the values of that metric and notice the different Device ID's Congratulations! You have ingested data from a CSV file into Monitor for several devices through a gateway. Now you can explore creating calculated data metrics and dashboards in Monitor. Which could be something like this: Attention Please archive and delete your device type when it is no longer being used.","title":"Verify the devices and data in Monitor"}]}