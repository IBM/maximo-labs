{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to the Maximo Monitor Installation Hands-on Lab You will learn how to install Maximo Monitor on an existing Maximo Application Suite (MAS) environment. The exercises will cover: Using MAS CLI docker container to install IoT Tool and Monitor Have fun with Maximo Monitor Note Expected time needed to run the complete lab will depend one which MAS Techzone Certified Base Image that is selected: 3+ hours Updated: 2025-04-02","title":"Welcome"},{"location":"#welcome-to-the-maximo-monitor-installation-hands-on-lab","text":"You will learn how to install Maximo Monitor on an existing Maximo Application Suite (MAS) environment. The exercises will cover: Using MAS CLI docker container to install IoT Tool and Monitor Have fun with Maximo Monitor Note Expected time needed to run the complete lab will depend one which MAS Techzone Certified Base Image that is selected: 3+ hours Updated: 2025-04-02","title":"Welcome to the Maximo Monitor Installation Hands-on Lab"},{"location":"install/","text":"oc login --token=sha256~zxwGF1b0XEPf6R6QS5ODeiSD67abErDsas0s63JbC4o --server=https://api.1e35f5fc927.ocp.techzone.ibm.com:6443 mkdir /root/mas_configs kubectl get secret ibm-sls-sls-entitlement -n ibm-sls -o json | jq -r '.data.entitlement' | base64 --decode > /root/mas_configs/entitlement.lic export IBM_ENTITLEMENT_KEY=$(kubectl get secret ibm-entitlement -n mas-inst1-core -o json | jq -r '.data[\".dockerconfigjson\"]' | base64 --decode | jq -r '.auths[\"cp.icr.io/cp\"].password') export DB2_INSTANCE_NAME=db2u-iot export MAS_INSTANCE_ID=inst1 export MAS_CONFIG_DIR=/root/mas_configs ansible-playbook ibm.mas_devops.oneclick_add_iot ansible-playbook ibm.mas_devops.oneclick_add_monitor","title":"Install"},{"location":"install_monitor/","text":"Objectives In this Exercise you will learn how to install Maximo Monitor on an existing MAS cluster. Before you begin: This Exercise requires that you have completed the pre-requisites required for all exercises Start MAS CLI Note This lab relies on the MAS Devops Ansible Collection and the IBM Maximo Application Suite CLI Utility . First open a terminal and run the docker command to start the MAS CLI docker container: docker run -ti --rm --pull always quay.io/ibmmas/cli Login to the OpenShift cluster using your kubeadmin account and click on Copy login command : Click on Display Token and copy the oc login command in its entirety: Run the command in the MAS CLI docker container: Prepare for Installation Define the required environment variables according to MAS DevOps Ansible Playbook for adding IoT using the MAS CLI docker container. First extract the existing MAS License File from your MAS environement and define MAS_CONFIG_DIR: mkdir /root/mas_configs kubectl get secret ibm-sls-sls-entitlement -n ibm-sls -o json | jq -r '.data.entitlement' | base64 --decode > /root/mas_configs/entitlement.lic export MAS_CONFIG_DIR=/root/mas_configs Then define the other environment variables: export IBM_ENTITLEMENT_KEY=$(kubectl get secret ibm-entitlement -n mas-inst1-core -o json | jq -r '.data[\".dockerconfigjson\"]' | base64 --decode | jq -r '.auths[\"cp.icr.io/cp\"].password') export DB2_INSTANCE_NAME=db2u-iot export MAS_INSTANCE_ID=inst1 Install IoT Tool The first component that needs to be installed is the IoT Tool - this also includes: * Set up Db2 instance as the system-level JDBC datasource * Set up Kafka cluster as the system-level Kafka Run the following command in the MAS CLI docker container: ansible-playbook ibm.mas_devops.oneclick_add_iot Now grab a cup of coffee and be patient. Installing the IoT Tool and the dependencies takes 1,5 - 2 hours. Don't be worried when you see the FAILED - RETRYING:... messages: You can continue this exercise, when you see the following: Install Monitor Run the following command in the MAS CLI docker container: ansible-playbook ibm.mas_devops.oneclick_add_monitor Another cup of coffee and patience is needed. Installing the Monitor application takes 1 - 1,5 hours. You are done when you see this: Logging into MAS and viewing in About, this MAS environment now have MAS Core, Manage, IoT, and Monitor installed: Tip You can now install the additional Maximo Application Suite applications by following the MAS Devops Ansible Collection or begin to test, build your demo, or build your pilot with the installed applications - have fun !! Congratulations you have successfully installed Maximo Monitor on an existing MAS environment.","title":"1. Install Maximo Monitor"},{"location":"install_monitor/#objectives","text":"In this Exercise you will learn how to install Maximo Monitor on an existing MAS cluster. Before you begin: This Exercise requires that you have completed the pre-requisites required for all exercises","title":"Objectives"},{"location":"install_monitor/#start-mas-cli","text":"Note This lab relies on the MAS Devops Ansible Collection and the IBM Maximo Application Suite CLI Utility . First open a terminal and run the docker command to start the MAS CLI docker container: docker run -ti --rm --pull always quay.io/ibmmas/cli Login to the OpenShift cluster using your kubeadmin account and click on Copy login command : Click on Display Token and copy the oc login command in its entirety: Run the command in the MAS CLI docker container:","title":"Start MAS CLI"},{"location":"install_monitor/#prepare-for-installation","text":"Define the required environment variables according to MAS DevOps Ansible Playbook for adding IoT using the MAS CLI docker container. First extract the existing MAS License File from your MAS environement and define MAS_CONFIG_DIR: mkdir /root/mas_configs kubectl get secret ibm-sls-sls-entitlement -n ibm-sls -o json | jq -r '.data.entitlement' | base64 --decode > /root/mas_configs/entitlement.lic export MAS_CONFIG_DIR=/root/mas_configs Then define the other environment variables: export IBM_ENTITLEMENT_KEY=$(kubectl get secret ibm-entitlement -n mas-inst1-core -o json | jq -r '.data[\".dockerconfigjson\"]' | base64 --decode | jq -r '.auths[\"cp.icr.io/cp\"].password') export DB2_INSTANCE_NAME=db2u-iot export MAS_INSTANCE_ID=inst1","title":"Prepare for Installation"},{"location":"install_monitor/#install-iot-tool","text":"The first component that needs to be installed is the IoT Tool - this also includes: * Set up Db2 instance as the system-level JDBC datasource * Set up Kafka cluster as the system-level Kafka Run the following command in the MAS CLI docker container: ansible-playbook ibm.mas_devops.oneclick_add_iot Now grab a cup of coffee and be patient. Installing the IoT Tool and the dependencies takes 1,5 - 2 hours. Don't be worried when you see the FAILED - RETRYING:... messages: You can continue this exercise, when you see the following:","title":"Install IoT Tool"},{"location":"install_monitor/#install-monitor","text":"Run the following command in the MAS CLI docker container: ansible-playbook ibm.mas_devops.oneclick_add_monitor Another cup of coffee and patience is needed. Installing the Monitor application takes 1 - 1,5 hours. You are done when you see this: Logging into MAS and viewing in About, this MAS environment now have MAS Core, Manage, IoT, and Monitor installed: Tip You can now install the additional Maximo Application Suite applications by following the MAS Devops Ansible Collection or begin to test, build your demo, or build your pilot with the installed applications - have fun !! Congratulations you have successfully installed Maximo Monitor on an existing MAS environment.","title":"Install Monitor"},{"location":"prereqs/","text":"Pre-Requisite Instructions Here are the pre-requisites for the exercises in this lab. Attention This lab requires an instance of MAS 9.0 or later with at least MAS Core installed. All Exercises All Exercises require that you have: A computer with a Chrome or Firefox browser and internet connectivity. Access to login to an OpenShift cluster using kubeadmin with at least MAS Core installed. Which could be the result from running the MAS Techzone Certified Base Image Hands-on Lab . Docker must be running on your local machine while using MAS CLI One multi platform option is Rancher Desktop. It is fairly easy to install Rancher Desktop, as you just have to follow this guide: Running Docker locally Tip Podman and Docker Desktop should also work, but I have not tested it.","title":"Pre-Requisites"},{"location":"prereqs/#pre-requisite-instructions","text":"Here are the pre-requisites for the exercises in this lab. Attention This lab requires an instance of MAS 9.0 or later with at least MAS Core installed.","title":"Pre-Requisite Instructions"},{"location":"prereqs/#all-exercises","text":"All Exercises require that you have: A computer with a Chrome or Firefox browser and internet connectivity. Access to login to an OpenShift cluster using kubeadmin with at least MAS Core installed. Which could be the result from running the MAS Techzone Certified Base Image Hands-on Lab . Docker must be running on your local machine while using MAS CLI One multi platform option is Rancher Desktop. It is fairly easy to install Rancher Desktop, as you just have to follow this guide: Running Docker locally Tip Podman and Docker Desktop should also work, but I have not tested it.","title":"All Exercises"},{"location":"release_notes/","text":"Contributors to This Hands-on Lab Author & Developer: Jan Ekstr\u00f8m - jan.ekstrom@dk.ibm.com Change Information Date By Description 2025-04-02 Jan Ekstr\u00f8m Added 'Copy to clipboard' for commands. 2024-08-30 Jan Ekstr\u00f8m Lab is ready for the first release.","title":"Release Notes"},{"location":"release_notes/#contributors-to-this-hands-on-lab","text":"","title":"Contributors to This Hands-on Lab"},{"location":"release_notes/#author-developer","text":"Jan Ekstr\u00f8m - jan.ekstrom@dk.ibm.com","title":"Author &amp; Developer:"},{"location":"release_notes/#change-information","text":"Date By Description 2025-04-02 Jan Ekstr\u00f8m Added 'Copy to clipboard' for commands. 2024-08-30 Jan Ekstr\u00f8m Lab is ready for the first release.","title":"Change Information"}]}